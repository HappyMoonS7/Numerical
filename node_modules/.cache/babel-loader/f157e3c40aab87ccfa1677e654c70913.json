{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/src/Calculate/Linear Algebra/Gauss.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nconst InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar A = [],\n    B = [],\n    X,\n    matrixA = [],\n    matrixB = [],\n    output = [];\n\nclass Gauss extends Component {\n  constructor() {\n    super();\n    this.state = {\n      row: 0,\n      column: 0,\n      showDimentionForm: true,\n      showMatrixForm: false,\n      showOutputCard: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.gauss = this.gauss.bind(this);\n  }\n\n  gauss(n) {\n    this.initMatrix();\n\n    if (A[0][0] === 0) {\n      //pivoting\n      var tempRow = JSON.parse(JSON.stringify(A[0]));\n      var tempColumn = B[0];\n      A[0] = A[1];\n      A[1] = tempRow;\n      B[0] = B[1];\n      B[1] = tempColumn;\n    } //Forward eliminated\n\n\n    for (var k = 0; k < n; k++) {\n      for (var i = k + 1; i < n; i++) {\n        var factor = A[i][k] / A[k][k];\n\n        for (var j = k; j < n; j++) {\n          A[i][j] = A[i][j] - factor * A[k][j];\n        }\n\n        B[i] = B[i] - factor * B[k];\n      }\n    } //Backward Substitution\n\n\n    X = new Array(n);\n    X[n - 1] = Math.round(B[n - 1] / A[n - 1][n - 1]); //find Xn\n\n    for (i = n - 2; i >= 0; i--) {\n      //find Xn-1 to X1\n      var sum = B[i];\n\n      for (j = i + 1; j < n; j++) {\n        sum = sum - A[i][j] * X[j];\n      }\n\n      X[i] = Math.round(sum / A[i][i]);\n    }\n\n    for (i = 0; i < n; i++) {\n      output.push(\"x\" + (i + 1) + \" = \" + X[i]);\n      output.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this));\n    }\n\n    this.setState({\n      showOutputCard: true\n    });\n  }\n\n  createMatrix(row, column) {\n    A = [];\n    B = [];\n    X = [];\n    matrixA = [];\n    matrixB = [];\n    output = [];\n\n    for (var i = 1; i <= row; i++) {\n      for (var j = 1; j <= column; j++) {\n        matrixA.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"18%\",\n            height: \"50%\",\n            backgroundColor: \"#06d9a0\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"a\" + i + \"\" + j,\n          placeholder: \"a\" + i + \"\" + j\n        }, \"a\" + i + \"\" + j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 30\n        }, this));\n      }\n\n      matrixA.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 26\n      }, this));\n      matrixB.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"18%\",\n          height: \"50%\",\n          backgroundColor: \"black\",\n          marginInlineEnd: \"5%\",\n          marginBlockEnd: \"5%\",\n          color: \"white\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"b\" + i,\n        placeholder: \"b\" + i\n      }, \"b\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 26\n      }, this));\n    }\n\n    this.setState({\n      showDimentionForm: false,\n      showMatrixForm: true\n    });\n  }\n\n  initMatrix() {\n    for (var i = 0; i < this.state.row; i++) {\n      A[i] = [];\n\n      for (var j = 0; j < this.state.column; j++) {\n        A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n      }\n\n      B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"#FFFF\",\n        padding: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        children: \"Gauss Elimination\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            bordered: true,\n            style: {\n              background: \"gray\",\n              borderRadius: \"15px\",\n              color: \"#FFFFFFFF\"\n            },\n            onChange: this.handleChange,\n            children: [this.state.showDimentionForm && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Row\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"large\",\n                name: \"row\",\n                style: InputStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Column\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"large\",\n                name: \"column\",\n                style: InputStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 52\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                id: \"dimention_button\",\n                onClick: () => this.createMatrix(this.state.row, this.state.column),\n                style: {\n                  background: \"#4caf50\",\n                  color: \"white\"\n                },\n                children: [\"Submit\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this), this.state.showMatrixForm && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Matrix [A]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 56\n              }, this), matrixA, /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Vector [B]\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this), matrixB, /*#__PURE__*/_jsxDEV(Button, {\n                id: \"matrix_button\",\n                style: {\n                  background: \"blue\",\n                  color: \"white\"\n                },\n                onClick: () => this.gauss(this.state.row),\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: this.state.showOutputCard && /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Output\",\n            bordered: true,\n            style: {\n              background: \"#3d683d\",\n              color: \"#FFFFFFFF\"\n            },\n            onChange: this.handleChange,\n            id: \"answerCard\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: \"24px\",\n                fontWeight: \"bold\"\n              },\n              children: output\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Gauss;","map":{"version":3,"sources":["/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/src/Calculate/Linear Algebra/Gauss.js"],"names":["React","Component","Card","Input","Button","InputStyle","background","color","fontWeight","fontSize","A","B","X","matrixA","matrixB","output","Gauss","constructor","state","row","column","showDimentionForm","showMatrixForm","showOutputCard","handleChange","bind","gauss","n","initMatrix","tempRow","JSON","parse","stringify","tempColumn","k","i","factor","j","Array","Math","round","sum","push","setState","createMatrix","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","parseFloat","document","getElementById","value","event","target","name","render","padding","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Input, Button } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\n\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\n\nvar A = [], B = [], X, matrixA = [], matrixB = [], output = []\nclass Gauss extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            row: 0,\n            column: 0,\n            showDimentionForm: true,\n            showMatrixForm: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.gauss = this.gauss.bind(this);\n\n    }\n\n    gauss(n) {\n        this.initMatrix()\n        if (A[0][0] === 0) { //pivoting\n            var tempRow = JSON.parse(JSON.stringify(A[0]));\n            var tempColumn = B[0];\n            A[0] = A[1];\n            A[1] = tempRow;\n            B[0] = B[1];\n            B[1] = tempColumn;\n        }\n        //Forward eliminated\n        for (var k = 0; k < n; k++) {\n            for (var i = k + 1; i < n; i++) {\n                var factor = A[i][k] / A[k][k];\n                for (var j = k; j < n; j++) {\n                    A[i][j] = A[i][j] - factor * A[k][j];\n                }\n                B[i] = B[i] - factor * B[k];\n            }\n        }\n        //Backward Substitution\n        X = new Array(n);\n        X[n - 1] = Math.round(B[n - 1] / A[n - 1][n - 1]); //find Xn\n        for (i = n - 2; i >= 0; i--) { //find Xn-1 to X1\n            var sum = B[i];\n            for (j = i + 1; j < n; j++) {\n                sum = sum - A[i][j] * X[j];\n            }\n            X[i] = Math.round(sum / A[i][i]);\n        }\n        for (i = 0; i < n; i++) {\n            output.push(\"x\" + (i + 1) + \" = \" + X[i]);\n            output.push(<br />)\n        }\n\n        this.setState({\n            showOutputCard: true\n        });\n\n    }\n    createMatrix(row, column) {\n        A = []\n        B = []\n        X = []\n        matrixA = []\n        matrixB = []\n        output = []\n        for (var i = 1; i <= row; i++) {\n            for (var j = 1; j <= column; j++) {\n                matrixA.push(<Input style={{\n                    width: \"18%\",\n                    height: \"50%\",\n                    backgroundColor: \"#06d9a0\",\n                    marginInlineEnd: \"5%\",\n                    marginBlockEnd: \"5%\",\n                    color: \"white\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }}\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\n            }\n            matrixA.push(<br />)\n            matrixB.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\",\n                backgroundColor: \"black\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\n\n\n        }\n\n        this.setState({\n            showDimentionForm: false,\n            showMatrixForm: true,\n        })\n\n\n    }\n    initMatrix() {\n        for (var i = 0; i < this.state.row; i++) {\n            A[i] = []\n            for (var j = 0; j < this.state.column; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Gauss Elimination</h2>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n\n\n                            {this.state.showDimentionForm &&\n                                <div>\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\n                                    <Button id=\"dimention_button\" onClick={\n                                        () => this.createMatrix(this.state.row, this.state.column)\n                                    }\n                                        style={{ background: \"#4caf50\", color: \"white\" }}>\n                                        Submit<br></br>\n                                    </Button>\n                                </div>\n                            }\n\n                            {this.state.showMatrixForm &&\n                                <div>\n                                    <h2>Matrix [A]</h2><br />{matrixA}\n                                    <h2>Vector [B]<br /></h2>{matrixB}\n                                    \n                                    <Button\n                                        id=\"matrix_button\"\n                                        style={{ background: \"blue\", color: \"white\" }}\n                                        onClick={() => this.gauss(this.state.row)}>\n                                        Submit\n                                    </Button>\n                                </div>\n                            }\n                        </Card>                        \n                    </div>\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{ background: \"#3d683d\", color: \"#FFFFFFFF\" }}\n                                onChange={this.handleChange} id=\"answerCard\">\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{output}</p>\n                            </Card>\n                        }                        \n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Gauss;\n\n\n\n"]},"metadata":{},"sourceType":"module"}