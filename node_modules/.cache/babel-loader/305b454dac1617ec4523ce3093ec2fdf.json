{"ast":null,"code":"import _defineProperty from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/bovornpoljiturai/Numerical-method/src/Calculate/Linear Algebra/Gauss.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar A = [],\n    B = [],\n    X,\n    matrixA = [],\n    matrixB = [],\n    output = [];\n\nvar Gauss = /*#__PURE__*/function (_Component) {\n  _inherits(Gauss, _Component);\n\n  var _super = _createSuper(Gauss);\n\n  function Gauss() {\n    var _this;\n\n    _classCallCheck(this, Gauss);\n\n    _this = _super.call(this);\n    _this.state = {\n      row: 0,\n      column: 0,\n      showDimentionForm: true,\n      showMatrixForm: false,\n      showOutputCard: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.gauss = _this.gauss.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Gauss, [{\n    key: \"gauss\",\n    value: function gauss(n) {\n      this.initMatrix();\n\n      if (A[0][0] === 0) {\n        //pivoting\n        var tempRow = JSON.parse(JSON.stringify(A[0]));\n        var tempColumn = B[0];\n        A[0] = A[1];\n        A[1] = tempRow;\n        B[0] = B[1];\n        B[1] = tempColumn;\n      } //Forward eliminated\n\n\n      for (var k = 0; k < n; k++) {\n        for (var i = k + 1; i < n; i++) {\n          var factor = A[i][k] / A[k][k];\n\n          for (var j = k; j < n; j++) {\n            A[i][j] = A[i][j] - factor * A[k][j];\n          }\n\n          B[i] = B[i] - factor * B[k];\n        }\n      } //Backward Substitution\n\n\n      X = new Array(n);\n      X[n - 1] = Math.round(B[n - 1] / A[n - 1][n - 1]); //find Xn\n\n      for (i = n - 2; i >= 0; i--) {\n        //find Xn-1 to X1\n        var sum = B[i];\n\n        for (j = i + 1; j < n; j++) {\n          sum = sum - A[i][j] * X[j];\n        }\n\n        X[i] = Math.round(sum / A[i][i]);\n      }\n\n      for (i = 0; i < n; i++) {\n        output.push(\"x\" + (i + 1) + \" = \" + X[i]);\n        output.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this));\n      }\n\n      this.setState({\n        showOutputCard: true\n      });\n    }\n  }, {\n    key: \"createMatrix\",\n    value: function createMatrix(row, column) {\n      A = [];\n      B = [];\n      X = [];\n      matrixA = [];\n      matrixB = [];\n      output = [];\n\n      for (var i = 1; i <= row; i++) {\n        for (var j = 1; j <= column; j++) {\n          matrixA.push( /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              width: \"18%\",\n              height: \"50%\",\n              backgroundColor: \"#06d9a0\",\n              marginInlineEnd: \"5%\",\n              marginBlockEnd: \"5%\",\n              color: \"white\",\n              fontSize: \"18px\",\n              fontWeight: \"bold\"\n            },\n            id: \"a\" + i + \"\" + j,\n            placeholder: \"a\" + i + \"\" + j\n          }, \"a\" + i + \"\" + j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 30\n          }, this));\n        }\n\n        matrixA.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 26\n        }, this));\n        matrixB.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"18%\",\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"b\" + i,\n          placeholder: \"b\" + i\n        }, \"b\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 26\n        }, this));\n      }\n\n      this.setState({\n        showDimentionForm: false,\n        showMatrixForm: true\n      });\n    }\n  }, {\n    key: \"initMatrix\",\n    value: function initMatrix() {\n      for (var i = 0; i < this.state.row; i++) {\n        A[i] = [];\n\n        for (var j = 0; j < this.state.column; j++) {\n          A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n        }\n\n        B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"#FFFF\",\n          padding: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"black\",\n            fontWeight: \"bold\"\n          },\n          children: \"Gauss Elimination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                background: \"gray\",\n                borderRadius: \"15px\",\n                color: \"#FFFFFFFF\"\n              },\n              onChange: this.handleChange,\n              children: [this.state.showDimentionForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Row\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"row\",\n                  style: InputStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Column\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"column\",\n                  style: InputStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 52\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"dimention_button\",\n                  onClick: function onClick() {\n                    return _this2.createMatrix(_this2.state.row, _this2.state.column);\n                  },\n                  style: {\n                    background: \"#4caf50\",\n                    color: \"white\"\n                  },\n                  children: [\"Submit\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 47\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this), this.state.showMatrixForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Matrix [A]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 56\n                }, this), matrixA, /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"Vector [B]\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 51\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 37\n                }, this), matrixB, /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"matrix_button\",\n                  style: {\n                    background: \"blue\",\n                    color: \"white\"\n                  },\n                  onClick: function onClick() {\n                    return _this2.gauss(_this2.state.row);\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: this.state.showOutputCard && /*#__PURE__*/_jsxDEV(Card, {\n              title: \"Output\",\n              bordered: true,\n              style: {\n                background: \"#3d683d\",\n                color: \"#FFFFFFFF\"\n              },\n              onChange: this.handleChange,\n              id: \"answerCard\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontSize: \"24px\",\n                  fontWeight: \"bold\"\n                },\n                children: output\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Gauss;\n}(Component);\n\nexport default Gauss;","map":{"version":3,"sources":["/Users/bovornpoljiturai/Numerical-method/src/Calculate/Linear Algebra/Gauss.js"],"names":["React","Component","Card","Input","Button","InputStyle","background","color","fontWeight","fontSize","A","B","X","matrixA","matrixB","output","Gauss","state","row","column","showDimentionForm","showMatrixForm","showOutputCard","handleChange","bind","gauss","n","initMatrix","tempRow","JSON","parse","stringify","tempColumn","k","i","factor","j","Array","Math","round","sum","push","setState","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","parseFloat","document","getElementById","value","event","target","name","padding","borderRadius","createMatrix"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Input, Button } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\n\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\n\nvar A = [], B = [], X, matrixA = [], matrixB = [], output = []\nclass Gauss extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            row: 0,\n            column: 0,\n            showDimentionForm: true,\n            showMatrixForm: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.gauss = this.gauss.bind(this);\n\n    }\n\n    gauss(n) {\n        this.initMatrix()\n        if (A[0][0] === 0) { //pivoting\n            var tempRow = JSON.parse(JSON.stringify(A[0]));\n            var tempColumn = B[0];\n            A[0] = A[1];\n            A[1] = tempRow;\n            B[0] = B[1];\n            B[1] = tempColumn;\n        }\n        //Forward eliminated\n        for (var k = 0; k < n; k++) {\n            for (var i = k + 1; i < n; i++) {\n                var factor = A[i][k] / A[k][k];\n                for (var j = k; j < n; j++) {\n                    A[i][j] = A[i][j] - factor * A[k][j];\n                }\n                B[i] = B[i] - factor * B[k];\n            }\n        }\n        //Backward Substitution\n        X = new Array(n);\n        X[n - 1] = Math.round(B[n - 1] / A[n - 1][n - 1]); //find Xn\n        for (i = n - 2; i >= 0; i--) { //find Xn-1 to X1\n            var sum = B[i];\n            for (j = i + 1; j < n; j++) {\n                sum = sum - A[i][j] * X[j];\n            }\n            X[i] = Math.round(sum / A[i][i]);\n        }\n        for (i = 0; i < n; i++) {\n            output.push(\"x\" + (i + 1) + \" = \" + X[i]);\n            output.push(<br />)\n        }\n\n        this.setState({\n            showOutputCard: true\n        });\n\n    }\n    createMatrix(row, column) {\n        A = []\n        B = []\n        X = []\n        matrixA = []\n        matrixB = []\n        output = []\n        for (var i = 1; i <= row; i++) {\n            for (var j = 1; j <= column; j++) {\n                matrixA.push(<Input style={{\n                    width: \"18%\",\n                    height: \"50%\",\n                    backgroundColor: \"#06d9a0\",\n                    marginInlineEnd: \"5%\",\n                    marginBlockEnd: \"5%\",\n                    color: \"white\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }}\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\n            }\n            matrixA.push(<br />)\n            matrixB.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\",\n                backgroundColor: \"black\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\n\n\n        }\n\n        this.setState({\n            showDimentionForm: false,\n            showMatrixForm: true,\n        })\n\n\n    }\n    initMatrix() {\n        for (var i = 0; i < this.state.row; i++) {\n            A[i] = []\n            for (var j = 0; j < this.state.column; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Gauss Elimination</h2>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n\n\n                            {this.state.showDimentionForm &&\n                                <div>\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\n                                    <Button id=\"dimention_button\" onClick={\n                                        () => this.createMatrix(this.state.row, this.state.column)\n                                    }\n                                        style={{ background: \"#4caf50\", color: \"white\" }}>\n                                        Submit<br></br>\n                                    </Button>\n                                </div>\n                            }\n\n                            {this.state.showMatrixForm &&\n                                <div>\n                                    <h2>Matrix [A]</h2><br />{matrixA}\n                                    <h2>Vector [B]<br /></h2>{matrixB}\n                                    \n                                    <Button\n                                        id=\"matrix_button\"\n                                        style={{ background: \"blue\", color: \"white\" }}\n                                        onClick={() => this.gauss(this.state.row)}>\n                                        Submit\n                                    </Button>\n                                </div>\n                            }\n                        </Card>                        \n                    </div>\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{ background: \"#3d683d\", color: \"#FFFFFFFF\" }}\n                                onChange={this.handleChange} id=\"answerCard\">\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{output}</p>\n                            </Card>\n                        }                        \n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Gauss;\n\n\n\n"]},"metadata":{},"sourceType":"module"}