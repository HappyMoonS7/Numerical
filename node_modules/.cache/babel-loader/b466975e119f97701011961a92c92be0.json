{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/src/Calculate/Interpolation/Lagrange.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nconst InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar columns = [{\n  title: \"No.\",\n  dataIndex: \"no\",\n  key: \"no\"\n}, {\n  title: \"X\",\n  dataIndex: \"x\",\n  key: \"x\"\n}, {\n  title: \"Y\",\n  dataIndex: \"y\",\n  key: \"y\"\n}];\nvar x, y, tableTag, interpolatePoint, tempTag, fx;\n\nclass Lagrange extends Component {\n  constructor() {\n    super();\n    x = [];\n    y = [];\n    interpolatePoint = [];\n    tempTag = [];\n    tableTag = [];\n    this.state = {\n      nPoints: 0,\n      X: 0,\n      interpolatePoint: 0,\n      showInputForm: true,\n      showTableInput: false,\n      showOutputCard: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.lagrange = this.lagrange.bind(this);\n  }\n\n  createTableInput(n) {\n    for (var i = 1; i <= n; i++) {\n      x.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"100%\",\n          height: \"50%\",\n          backgroundColor: \"black\",\n          marginInlineEnd: \"5%\",\n          marginBlockEnd: \"5%\",\n          color: \"white\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"x\" + i,\n        placeholder: \"x\" + i\n      }, \"x\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this));\n      y.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"100%\",\n          height: \"50%\",\n          backgroundColor: \"black\",\n          marginInlineEnd: \"5%\",\n          marginBlockEnd: \"5%\",\n          color: \"white\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"y\" + i,\n        placeholder: \"y\" + i\n      }, \"y\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 20\n      }, this));\n      tableTag.push({\n        no: i,\n        x: x[i - 1],\n        y: y[i - 1]\n      });\n    }\n\n    this.setState({\n      showInputForm: false,\n      showTableInput: true\n    });\n  }\n\n  createInterpolatePointInput() {\n    for (var i = 1; i <= this.state.interpolatePoint; i++) {\n      tempTag.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"14%\",\n          height: \"50%\",\n          backgroundColor: \"black\",\n          marginInlineEnd: \"5%\",\n          marginBlockEnd: \"5%\",\n          color: \"white\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"p\" + i,\n        placeholder: \"p\" + i\n      }, \"p\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 26\n      }, this));\n    }\n  }\n\n  initialValue() {\n    x = [];\n    y = [];\n\n    for (var i = 1; i <= this.state.nPoints; i++) {\n      x[i] = parseFloat(document.getElementById(\"x\" + i).value);\n      y[i] = parseFloat(document.getElementById(\"y\" + i).value);\n    }\n\n    for (i = 1; i <= this.state.interpolatePoint; i++) {\n      interpolatePoint[i] = parseFloat(document.getElementById(\"p\" + i).value);\n    }\n  }\n\n  L(X, index, n) {\n    var numerate = 1\n    /*ตัวเศษ*/\n    ,\n        denominate = 1\n    /*ตัวส่วน*/\n    ;\n\n    for (var i = 1; i <= n; i++) {\n      if (i !== index) {\n        numerate *= x[i] - X;\n        denominate *= x[i] - x[index];\n      }\n    }\n\n    console.log(numerate / denominate);\n    return parseFloat(numerate / denominate);\n  }\n\n  lagrange(n, X) {\n    fx = 0;\n    this.initialValue();\n\n    for (var i = 1; i <= n; i++) {\n      fx += this.L(X, i, n) * y[i];\n    }\n\n    this.setState({\n      showOutputCard: true\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        children: \"Lagrange Interpolation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            bordered: true,\n            style: {\n              background: \"gray\",\n              borderRadius: \"15px\",\n              color: \"#FFFFFFFF\"\n            },\n            onChange: this.handleChange,\n            children: [this.state.showInputForm && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Number of points(n)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"large\",\n                name: \"nPoints\",\n                style: InputStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 65\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"large\",\n                name: \"X\",\n                style: InputStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 47\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"interpolatePoint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"large\",\n                name: \"interpolatePoint\",\n                style: InputStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 62\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                id: \"dimention_button\",\n                onClick: () => {\n                  this.createTableInput(parseInt(this.state.nPoints));\n                  this.createInterpolatePointInput();\n                },\n                style: {\n                  background: \"#4caf50\",\n                  color: \"white\"\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this), this.state.showTableInput && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Table, {\n                columns: columns,\n                dataSource: tableTag,\n                pagination: false,\n                bordered: true,\n                bodyStyle: {\n                  fontWeight: \"bold\",\n                  fontSize: \"18px\",\n                  color: \"white\",\n                  overflowY: \"scroll\",\n                  minWidth: 120,\n                  maxHeight: 300\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"interpolatePoint \", parseInt(this.state.interpolatePoint) === 2 ? \"(Linear)\" : parseInt(this.state.interpolatePoint) === 3 ? \"(Quadratic)\" : \"(Polynomial)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 42\n              }, this), tempTag, /*#__PURE__*/_jsxDEV(Button, {\n                id: \"matrix_button\",\n                style: {\n                  background: \"blue\",\n                  color: \"white\",\n                  fontSize: \"20px\"\n                },\n                onClick: () => this.lagrange(parseInt(this.state.interpolatePoint), parseFloat(this.state.X)),\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: this.state.showOutputCard && /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Output\",\n            bordered: true,\n            style: {\n              border: \"2px solid black\",\n              background: \"rgb(61, 104, 61) none repeat scroll 0% 0%\",\n              color: \"white\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: \"24px\",\n                fontWeight: \"bold\"\n              },\n              children: fx\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Lagrange;","map":{"version":3,"sources":["/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/src/Calculate/Interpolation/Lagrange.js"],"names":["React","Component","Card","Input","Button","Table","InputStyle","background","color","fontWeight","fontSize","columns","title","dataIndex","key","x","y","tableTag","interpolatePoint","tempTag","fx","Lagrange","constructor","state","nPoints","X","showInputForm","showTableInput","showOutputCard","handleChange","bind","lagrange","createTableInput","n","i","push","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","no","setState","createInterpolatePointInput","initialValue","parseFloat","document","getElementById","value","L","index","numerate","denominate","console","log","event","target","name","render","padding","borderRadius","parseInt","overflowY","minWidth","maxHeight","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Card, Input, Button, Table} from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\", \n    fontWeight: \"bold\", \n    fontSize: \"24px\"\n\n};\nvar columns = [\n    {\n      title: \"No.\",\n      dataIndex: \"no\",\n      key: \"no\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    }\n];\nvar x, y, tableTag,  interpolatePoint, tempTag, fx\n\nclass Lagrange extends Component {\n    \n    constructor() {\n        super();\n        x = []\n        y = []\n        interpolatePoint = []\n        tempTag = []\n        tableTag = []\n        this.state = {\n            nPoints: 0,\n            X: 0,\n            interpolatePoint: 0,\n            showInputForm : true,\n            showTableInput: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.lagrange = this.lagrange.bind(this);\n    \n    }  \n    createTableInput(n) {\n        for (var i=1 ; i<=n ; i++) {\n            x.push(<Input style={{\n                width: \"100%\",\n                height: \"50%\", \n                backgroundColor:\"black\", \n                marginInlineEnd: \"5%\", \n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n            id={\"x\"+i} key={\"x\"+i} placeholder={\"x\"+i}/>);\n            y.push(<Input style={{\n                width: \"100%\",\n                height: \"50%\", \n                backgroundColor:\"black\", \n                marginInlineEnd: \"5%\", \n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }} \n            id={\"y\"+i} key={\"y\"+i} placeholder={\"y\"+i}/>);   \n            tableTag.push({\n                no: i,\n                x: x[i-1],\n                y: y[i-1]\n            });\n        }\n\n\n        this.setState({\n            showInputForm: false,\n            showTableInput: true,\n        })\n    }\n    createInterpolatePointInput(){\n        for (var i=1 ; i<=this.state.interpolatePoint ; i++) {\n            tempTag.push(<Input style={{\n                width: \"14%\",\n                height: \"50%\", \n                backgroundColor:\"black\", \n                marginInlineEnd: \"5%\", \n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }} \n            id={\"p\"+i} key={\"p\"+i} placeholder={\"p\"+i} />)\n        }\n    }\n    initialValue() {\n        x = []\n        y = []\n        for (var i=1 ; i<=this.state.nPoints ; i++) {\n            x[i] = parseFloat(document.getElementById(\"x\"+i).value);\n            y[i] = parseFloat(document.getElementById(\"y\"+i).value);\n        }\n        for (i=1 ; i<=this.state.interpolatePoint ; i++) {\n            interpolatePoint[i] = parseFloat(document.getElementById(\"p\"+i).value);\n        }\n    }\n\n    L(X, index, n) {\n        var numerate = 1/*ตัวเศษ*/, denominate = 1/*ตัวส่วน*/;\n        for (var i=1 ; i<=n ; i++) {\n            if (i !== index) {\n                numerate *= x[i]-X;\n                denominate *= x[i] - x[index];\n            }\n        } \n        console.log(numerate/denominate)\n        return parseFloat(numerate/denominate);\n    }\n\n    lagrange(n, X) {\n        fx = 0\n        this.initialValue()\n        for (var i=1 ; i<=n ; i++) {\n            fx += this.L(X, i, n)*y[i];\n        }\n        this.setState({\n            showOutputCard: true\n        })\n\n    } \n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return(\n            <div style={{padding: \"30px\" }}>\n                <h2 style={{color: \"black\", fontWeight: \"bold\"}}>Lagrange Interpolation</h2>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                        bordered={true}\n                        style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                        onChange={this.handleChange}\n                        >\n                            {this.state.showInputForm && \n                                <div>\n                                    <h2>Number of points(n)</h2><Input size=\"large\" name=\"nPoints\" style={InputStyle}></Input>\n                                    <h2>X</h2><Input size=\"large\" name=\"X\" style={InputStyle}></Input>\n                                    <h2>interpolatePoint</h2><Input size=\"large\" name=\"interpolatePoint\" style={InputStyle}></Input>\n                                    <Button id=\"dimention_button\" onClick= {\n                                        ()=>{this.createTableInput(parseInt(this.state.nPoints));\n                                        this.createInterpolatePointInput()}\n                                    }  \n                                        style={{background: \"#4caf50\", color: \"white\" }}>\n                                        Submit\n                                    </Button>\n                                </div> \n                            }\n                            {this.state.showTableInput && \n                                <div>\n                                    <Table columns={columns} dataSource={tableTag} pagination={false} bordered={true} bodyStyle={{fontWeight: \"bold\", fontSize: \"18px\", color: \"white\" , overflowY: \"scroll\", minWidth: 120, maxHeight: 300}}></Table>\n                                    <br/><h2>interpolatePoint {parseInt(this.state.interpolatePoint) === 2 ? \"(Linear)\": \n                                                            parseInt(this.state.interpolatePoint) === 3 ? \"(Quadratic)\" :\n                                                            \"(Polynomial)\"}</h2>{tempTag}\n                                    <Button \n                                        id=\"matrix_button\"  \n                                        style={{background: \"blue\", color: \"white\", fontSize: \"20px\"}}\n                                        onClick={()=>this.lagrange(parseInt(this.state.interpolatePoint), parseFloat(this.state.X))}>\n                                        Submit\n                                    </Button>\n                                </div>\n                            }\n                     \n                        </Card>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                            title={\"Output\"}\n                            bordered={true}\n                            style={{ border: \"2px solid black\", background: \"rgb(61, 104, 61) none repeat scroll 0% 0%\", color: \"white\" }}\n                            >\n                                <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>{fx}</p>\n                            </Card>                        \n                        }                        \n                    </div>     \n                </div>\n\n                \n            </div>\n        );\n    }\n}\nexport default Lagrange;"]},"metadata":{},"sourceType":"module"}