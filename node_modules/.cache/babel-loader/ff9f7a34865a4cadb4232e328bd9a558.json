{"ast":null,"code":"import _defineProperty from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/src/Calculate/Root of Equation/Secant.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { error, func } from '../../services/Services';\nimport Graph from '../../components/Graph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar dataInTable = [];\nvar columns = [{\n  title: \"Iteration\",\n  dataIndex: \"iteration\",\n  key: \"iteration\"\n}, {\n  title: \"Y\",\n  dataIndex: \"y\",\n  key: \"y\"\n}, {\n  title: \"Error\",\n  key: \"error\",\n  dataIndex: \"error\"\n}];\n\nvar Secant = /*#__PURE__*/function (_Component) {\n  _inherits(Secant, _Component);\n\n  var _super = _createSuper(Secant);\n\n  function Secant() {\n    var _this;\n\n    _classCallCheck(this, Secant);\n\n    _this = _super.call(this);\n    _this.state = {\n      fx: \"\",\n      x0: 0,\n      x1: 0,\n      showOutputCard: false,\n      showGraph: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.secant = _this.secant.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Secant, [{\n    key: \"secant\",\n    value: function secant(x0, x1) {\n      var x = [],\n          y = 0,\n          epsilon = parseFloat(0.000000);\n      var n = 1,\n          i = 1;\n      var data = [];\n      data['y'] = [];\n      data['error'] = [];\n      x.push(x0);\n      x.push(x1);\n      data['y'][0] = x0;\n      data['error'][0] = \"---\";\n\n      do {\n        y = x[i] - func(this.state.fx, x[i]) * (x[i] - x[i - 1]) / (func(this.state.fx, x[i]) - func(this.state.fx, x[i - 1]));\n        x.push(y);\n        epsilon = error(y, x[i]);\n        data['y'][n] = y.toFixed(8);\n        data['error'][n] = Math.abs(epsilon).toFixed(8);\n        n++;\n        i++;\n      } while (Math.abs(epsilon) > 0.000001);\n\n      this.createTable(data['y'], data['error']);\n      this.setState({\n        showOutputCard: true,\n        showGraph: true\n      });\n    }\n  }, {\n    key: \"createTable\",\n    value: function createTable(y, error) {\n      dataInTable = [];\n\n      for (var i = 0; i < y.length; i++) {\n        dataInTable.push({\n          iteration: i + 1,\n          y: y[i],\n          error: error[i]\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          fx = _this$state.fx,\n          x0 = _this$state.x0,\n          x1 = _this$state.x1;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"#FFFF\",\n          padding: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"black\",\n            fontWeight: \"bold\"\n          },\n          children: \"Secant Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                background: \"gray\",\n                borderRadius: \"15px\",\n                color: \"#FFFFFFFF\"\n              },\n              onChange: this.handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"f(x)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"large\",\n                name: \"fx\",\n                style: InputStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"large\",\n                name: \"x0\",\n                style: InputStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 51\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"large\",\n                name: \"x1\",\n                style: InputStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 51\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 108\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 114\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                id: \"submit_button\",\n                onClick: function onClick() {\n                  return _this2.secant(parseFloat(x0), parseFloat(x1));\n                },\n                style: {\n                  background: \"#4caf50\",\n                  color: \"white\"\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: this.state.showGraph && /*#__PURE__*/_jsxDEV(Graph, {\n              fx: fx,\n              title: \"Secant Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: this.state.showOutputCard && /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Output\",\n            bordered: true,\n            style: {\n              width: \"100%\",\n              background: \"#2196f3\",\n              color: \"#FFFFFFFF\"\n            },\n            id: \"outputCard\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              columns: columns,\n              dataSource: dataInTable,\n              bodyStyle: {\n                fontWeight: \"bold\",\n                fontSize: \"18px\",\n                color: \"black\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Secant;\n}(Component);\n\nexport default Secant;","map":{"version":3,"sources":["/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/src/Calculate/Root of Equation/Secant.js"],"names":["React","Component","Card","Input","Button","Table","error","func","Graph","InputStyle","background","color","fontWeight","fontSize","dataInTable","columns","title","dataIndex","key","Secant","state","fx","x0","x1","showOutputCard","showGraph","handleChange","bind","secant","x","y","epsilon","parseFloat","n","i","data","push","toFixed","Math","abs","createTable","setState","length","iteration","event","target","name","value","padding","borderRadius","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { error, func } from '../../services/Services';\nimport Graph from '../../components/Graph';\n\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\nvar dataInTable = []\nconst columns = [\n    {\n        title: \"Iteration\",\n        dataIndex: \"iteration\",\n        key: \"iteration\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    },\n    {\n        title: \"Error\",\n        key: \"error\",\n        dataIndex: \"error\"\n    }\n];\n\nclass Secant extends Component {\n    constructor() {\n        super();\n        this.state = {\n            fx: \"\",\n            x0: 0,\n            x1: 0,\n            showOutputCard: false,\n            showGraph: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.secant = this.secant.bind(this);\n    }\n\n    secant(x0, x1) {\n        var x = [], y = 0, epsilon = parseFloat(0.000000);\n        var n = 1, i = 1;\n        var data = []\n        data['y'] = []\n        data['error'] = []\n        x.push(x0);\n        x.push(x1);\n        data['y'][0] = x0;\n        data['error'][0] = \"---\";\n\n        do {\n            y = x[i] - (func(this.state.fx, x[i]) * ((x[i] - x[i - 1]))) / (func(this.state.fx, x[i]) - func(this.state.fx, x[i - 1]));\n            x.push(y);\n            epsilon = error(y, x[i]);\n            data['y'][n] = y.toFixed(8);\n            data['error'][n] = Math.abs(epsilon).toFixed(8);\n\n            n++;\n            i++;\n\n        } while (Math.abs(epsilon) > 0.000001);\n        this.createTable(data['y'], data['error']);\n        this.setState({\n            showOutputCard: true,\n            showGraph: true\n        })\n\n\n    }\n\n    createTable(y, error) {\n        dataInTable = []\n        for (var i = 0; i < y.length; i++) {\n            dataInTable.push({\n                iteration: i + 1,\n                y: y[i],\n                error: error[i]\n            });\n        }\n\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    render() {\n        let { fx, x0, x1 } = this.state;\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Secant Method</h2>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n                            <h2>f(x)</h2><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\n                            <h2>X<sub>0</sub></h2><Input size=\"large\" name=\"x0\" style={InputStyle}></Input>\n                            <h2>X<sub>1</sub></h2><Input size=\"large\" name=\"x1\" style={InputStyle}></Input><br /><br />\n                            <Button id=\"submit_button\" onClick={\n                                () => this.secant(parseFloat(x0), parseFloat(x1))\n                            }\n                                style={{ background: \"#4caf50\", color: \"white\" }}>Submit</Button>\n\n                        </Card>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showGraph && <Graph fx={fx} title=\"Secant Method\" />}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.state.showOutputCard &&\n                        <Card\n                            title={\"Output\"}\n                            bordered={true}\n                            style={{ width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\" }}\n                            id=\"outputCard\"\n                        >\n                            <Table columns={columns} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}\n                            ></Table>\n                        </Card>\n                    }\n                </div>\n\n            </div>\n\n        );\n    }\n}\nexport default Secant;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}