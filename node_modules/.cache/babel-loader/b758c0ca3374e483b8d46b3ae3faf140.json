{"ast":null,"code":"import _defineProperty from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/src/Calculate/Linear Algebra/Jordan.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar A = [],\n    B = [],\n    matrixA = [],\n    matrixB = [],\n    output = [];\n\nvar Jordan = /*#__PURE__*/function (_Component) {\n  _inherits(Jordan, _Component);\n\n  var _super = _createSuper(Jordan);\n\n  function Jordan() {\n    var _this;\n\n    _classCallCheck(this, Jordan);\n\n    _this = _super.call(this);\n    _this.state = {\n      row: 0,\n      column: 0,\n      showDimentionForm: true,\n      showMatrixForm: false,\n      showOutputCard: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.jordan = _this.jordan.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Jordan, [{\n    key: \"jordan\",\n    value: function jordan(n) {\n      this.initMatrix();\n\n      if (A[0][0] === 0) {\n        //pivoting\n        var tempRow = JSON.parse(JSON.stringify(A[0]));\n        var tempColumn = B[0];\n        A[0] = A[1];\n        A[1] = tempRow;\n        B[0] = B[1];\n        B[1] = tempColumn;\n      } //Forward eliminate\n\n\n      for (var k = 0; k < n; k++) {\n        for (var i = k + 1; i < n; i++) {\n          var factor = A[i][k] / A[k][k];\n\n          for (var j = k; j < n; j++) {\n            A[i][j] = A[i][j] - factor * A[k][j];\n          }\n\n          B[i] = B[i] - factor * B[k];\n        }\n      } //Backward Substitution\n\n\n      for (k = n - 1; k >= 0; k--) {\n        for (i = k; i >= 0; i--) {\n          if (i === k) {\n            //Identity matrix\n            factor = 1 / A[i][k];\n\n            for (j = 0; j < n; j++) {\n              A[i][j] = A[i][j] * factor;\n            }\n\n            B[i] = B[i] * factor;\n          } else {\n            factor = A[i][k] / A[k][k];\n\n            for (j = 0; j < n; j++) {\n              A[i][j] = A[i][j] - factor * A[k][j];\n            }\n\n            B[i] = B[i] - factor * B[k];\n          }\n        }\n      }\n\n      for (i = 0; i < n; i++) {\n        output.push(B[i]);\n        output.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this));\n      }\n\n      this.setState({\n        showOutputCard: true\n      });\n    }\n  }, {\n    key: \"createMatrix\",\n    value: function createMatrix(row, column) {\n      for (var i = 1; i <= row; i++) {\n        for (var j = 1; j <= column; j++) {\n          matrixA.push( /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              width: \"18%\",\n              height: \"50%\",\n              backgroundColor: \"#06d9a0\",\n              marginInlineEnd: \"5%\",\n              marginBlockEnd: \"5%\",\n              color: \"white\",\n              fontSize: \"18px\",\n              fontWeight: \"bold\"\n            },\n            id: \"a\" + i + \"\" + j,\n            placeholder: \"a\" + i + \"\" + j\n          }, \"a\" + i + \"\" + j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 30\n          }, this));\n        }\n\n        matrixA.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 26\n        }, this));\n        matrixB.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"18%\",\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"b\" + i,\n          placeholder: \"b\" + i\n        }, \"b\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 26\n        }, this));\n      }\n\n      this.setState({\n        showDimentionForm: false,\n        showMatrixForm: true\n      });\n    }\n  }, {\n    key: \"initMatrix\",\n    value: function initMatrix() {\n      for (var i = 0; i < this.state.row; i++) {\n        A[i] = [];\n\n        for (var j = 0; j < this.state.column; j++) {\n          A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n        }\n\n        B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          row = _this$state.row,\n          column = _this$state.column;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"#FFFF\",\n          padding: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"black\",\n            fontWeight: \"bold\"\n          },\n          children: \"Gauss-Jordan Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                width: 400,\n                background: \"gray\",\n                borderRadius: \"15px\",\n                color: \"#FFFFFFFF\"\n              },\n              onChange: this.handleChange,\n              children: [this.state.showDimentionForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Row\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"row\",\n                  style: InputStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Column\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"column\",\n                  style: InputStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 52\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"dimention_button\",\n                  onClick: function onClick() {\n                    return _this2.createMatrix(row, column);\n                  },\n                  style: {\n                    background: \"#4caf50\",\n                    color: \"white\",\n                    fontSize: \"20px\"\n                  },\n                  children: [\"Submit\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 47\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this), this.state.showMatrixForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Matrix [A]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 56\n                }, this), matrixA, /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"Vector [B]\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 51\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 37\n                }, this), matrixB, /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"matrix_button\",\n                  style: {\n                    background: \"blue\",\n                    color: \"white\",\n                    fontSize: \"20px\"\n                  },\n                  onClick: function onClick() {\n                    return _this2.jordan(row);\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: this.state.showOutputCard && /*#__PURE__*/_jsxDEV(Card, {\n              title: \"Output\",\n              bordered: true,\n              style: {\n                width: 400,\n                background: \"#3d683d\",\n                color: \"#FFFFFFFF\",\n                float: \"left\"\n              },\n              onChange: this.handleChange,\n              id: \"answerCard\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontSize: \"24px\",\n                  fontWeight: \"bold\"\n                },\n                children: output\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Jordan;\n}(Component);\n\nexport default Jordan;","map":{"version":3,"sources":["/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/src/Calculate/Linear Algebra/Jordan.js"],"names":["React","Component","Card","Input","Button","InputStyle","background","color","fontWeight","fontSize","A","B","matrixA","matrixB","output","Jordan","state","row","column","showDimentionForm","showMatrixForm","showOutputCard","handleChange","bind","jordan","n","initMatrix","tempRow","JSON","parse","stringify","tempColumn","k","i","factor","j","push","setState","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","parseFloat","document","getElementById","value","event","target","name","padding","borderRadius","createMatrix","float"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Input, Button } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\n\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\n\nvar A = [], B = [], matrixA = [], matrixB = [], output = []\nclass Jordan extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            row: 0,\n            column: 0,\n            showDimentionForm: true,\n            showMatrixForm: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.jordan = this.jordan.bind(this);\n\n    }\n\n    jordan(n) {\n        this.initMatrix();\n        if (A[0][0] === 0) { //pivoting\n            var tempRow = JSON.parse(JSON.stringify(A[0]));\n            var tempColumn = B[0];\n            A[0] = A[1];\n            A[1] = tempRow;\n            B[0] = B[1];\n            B[1] = tempColumn;\n        }\n        //Forward eliminate\n        for (var k = 0; k < n; k++) {\n            for (var i = k + 1; i < n; i++) {\n                var factor = A[i][k] / A[k][k];\n                for (var j = k; j < n; j++) {\n                    A[i][j] = A[i][j] - factor * A[k][j];\n                }\n                B[i] = B[i] - factor * B[k];\n\n            }\n        }\n        //Backward Substitution\n        for (k = n - 1; k >= 0; k--) {\n            for (i = k; i >= 0; i--) {\n\n                if (i === k) {//Identity matrix\n                    factor = 1 / A[i][k];\n\n                    for (j = 0; j < n; j++) {\n                        A[i][j] = A[i][j] * factor;\n                    }\n                    B[i] = B[i] * factor;\n\n\n                }\n                else {\n                    factor = A[i][k] / A[k][k];\n                    for (j = 0; j < n; j++) {\n                        A[i][j] = A[i][j] - factor * A[k][j];\n                    }\n                    B[i] = B[i] - factor * B[k];\n                }\n            }\n        }\n        for (i = 0; i < n; i++) {\n            output.push(B[i]);\n            output.push(<br />)\n        }\n        this.setState({\n            showOutputCard: true\n        });\n\n\n    }\n    createMatrix(row, column) {\n        for (var i = 1; i <= row; i++) {\n            for (var j = 1; j <= column; j++) {\n                matrixA.push(<Input style={{\n                    width: \"18%\",\n                    height: \"50%\",\n                    backgroundColor: \"#06d9a0\",\n                    marginInlineEnd: \"5%\",\n                    marginBlockEnd: \"5%\",\n                    color: \"white\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }}\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\n            }\n            matrixA.push(<br />)\n            matrixB.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\",\n                backgroundColor: \"black\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\n\n\n        }\n\n        this.setState({\n            showDimentionForm: false,\n            showMatrixForm: true,\n        })\n\n\n    }\n    initMatrix() {\n        for (var i = 0; i < this.state.row; i++) {\n            A[i] = []\n            for (var j = 0; j < this.state.column; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        let { row, column } = this.state;\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Gauss-Jordan Method</h2>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ width: 400, background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n\n                            {this.state.showDimentionForm &&\n                                <div>\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\n                                    <Button id=\"dimention_button\" onClick={\n                                        () => this.createMatrix(row, column)\n                                    }\n                                        style={{ background: \"#4caf50\", color: \"white\", fontSize: \"20px\" }}>\n                                        Submit<br></br>\n                                    </Button>\n                                </div>\n                            }\n\n                            {this.state.showMatrixForm &&\n                                <div>\n                                    <h2>Matrix [A]</h2><br />{matrixA}\n                                    <h2>Vector [B]<br /></h2>{matrixB}\n                                    \n                                    <Button\n                                        id=\"matrix_button\"\n                                        style={{ background: \"blue\", color: \"white\", fontSize: \"20px\" }}\n                                        onClick={() => this.jordan(row)}>\n                                        Submit\n                                    </Button>\n                                </div>\n                            }\n\n                        </Card>\n\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{ width: 400, background: \"#3d683d\", color: \"#FFFFFFFF\", float: \"left\" }}\n                                onChange={this.handleChange} id=\"answerCard\">\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{output}</p>\n                            </Card>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Jordan;\n\n\n\n"]},"metadata":{},"sourceType":"module"}