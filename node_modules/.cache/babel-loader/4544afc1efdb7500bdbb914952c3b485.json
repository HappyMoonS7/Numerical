{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/src/Calculate/Linear Algebra/Cholesky.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { format } from 'mathjs';\nconst InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar A = [],\n    B = [],\n    matrixA = [],\n    matrixB = [],\n    output = [];\n\nclass Cholesky extends Component {\n  constructor() {\n    super();\n    this.state = {\n      row: 0,\n      column: 0,\n      showDimentionForm: true,\n      showMatrixForm: false,\n      showOutputCard: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.cholesky = this.cholesky.bind(this);\n  }\n\n  cholesky(n) {\n    this.initMatrix();\n    var x = new Array(n);\n    var y = new Array(n);\n\n    if (matrixA[0][0] === 0) {\n      for (var i = 0; i < n; i++) {\n        var temp = A[0][i];\n        matrixA[0][i] = B[i][i];\n        matrixB[0][i] = temp;\n      }\n    }\n\n    var matrixL = new Array(n);\n\n    for (i = 0; i < n; i++) {\n      matrixL[i] = new Array(n);\n\n      for (var j = 0; j < n; j++) {\n        matrixL[i][j] = 0;\n      }\n\n      x[i] = 0;\n      y[i] = 0;\n    }\n\n    matrixL[0][0] = Math.sqrt(matrixA[0][0]);\n\n    for (var k = 1; k < n; k++) {\n      for (i = 0; i < k; i++) {\n        var sum = 0;\n\n        if (i !== 0) {\n          for (j = 0; j < i; j++) {\n            sum += matrixL[i][j] * matrixL[k][j]; //console.log(sum);\n          }\n        }\n\n        matrixL[k][i] = (matrixA[i][k] - sum) / matrixL[i][i]; //ได้ค่า L ที่ไม่ใช่แนวทะแยง\n      }\n\n      sum = 0;\n\n      for (j = 0; j < k; j++) {\n        sum += matrixL[k][j] * matrixL[k][j];\n      }\n\n      matrixL[k][k] = Math.sqrt(matrixA[k][k] - sum);\n    }\n\n    ;\n    y[0] = matrixB[0] / matrixL[0][0];\n\n    for (i = 1; i < n; i++) {\n      sum = 0;\n\n      for (j = 0; j < i; j++) {\n        sum += matrixL[i][j] * y[j];\n      }\n\n      y[i] = (matrixB[i] - sum) / matrixL[i][i];\n    }\n\n    x[n - 1] = y[n - 1] / matrixL[n - 1][n - 1];\n\n    for (i = this.state.row - 2; i >= 0; i--) {\n      sum = 0;\n\n      for (j = i + 1; j < this.state.row; j++) {\n        sum += matrixL[j][i] * x[j];\n      }\n\n      x[i] = (y[i] - sum) / matrixL[i][i];\n    }\n\n    this.setState({\n      showOutputCard: true\n    });\n  }\n\n  summation(L, k) {\n    var sum = 0;\n\n    for (var i = 0; i < parseInt(this.state.row); i++) {\n      for (var j = 0; j < i - 2; j++) {\n        sum += L[i][j] * L[k][j];\n      }\n    }\n\n    return sum;\n  }\n\n  printFraction(value) {\n    return format(value, {\n      fraction: 'ratio'\n    });\n  }\n\n  createMatrix(row, column) {\n    for (var i = 0; i < row; i++) {\n      for (var j = 0; j < column; j++) {\n        matrixA.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"18%\",\n            height: \"50%\",\n            backgroundColor: \"#06d9a0\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"a\" + (i + 1) + \"\" + (j + 1),\n          placeholder: \"a\" + (i + 1) + \"\" + (j + 1)\n        }, \"a\" + (i + 1) + \"\" + (j + 1), false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 30\n        }, this));\n      }\n\n      matrixA.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 26\n      }, this));\n      matrixB.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"18%\",\n          height: \"50%\",\n          backgroundColor: \"black\",\n          marginInlineEnd: \"5%\",\n          marginBlockEnd: \"5%\",\n          color: \"white\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"b\" + (i + 1),\n        placeholder: \"b\" + (i + 1)\n      }, \"b\" + (i + 1), false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 26\n      }, this));\n    }\n\n    this.setState({\n      showDimentionForm: false,\n      showMatrixForm: true\n    });\n  }\n\n  initMatrix() {\n    for (var i = 0; i < this.state.row; i++) {\n      A[i] = [];\n\n      for (var j = 0; j < this.state.column; j++) {\n        A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n      }\n\n      B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"#FFFF\",\n        padding: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        children: \"Cholesky Decomposition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            bordered: true,\n            style: {\n              background: \"gray\",\n              borderRadius: \"15px\",\n              color: \"#FFFFFFFF\"\n            },\n            onChange: this.handleChange,\n            children: [this.state.showDimentionForm && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Row\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"large\",\n                name: \"row\",\n                style: InputStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Column\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"large\",\n                name: \"column\",\n                style: InputStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 52\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                id: \"dimention_button\",\n                onClick: () => this.createMatrix(this.state.row, this.state.column),\n                style: {\n                  background: \"#4caf50\",\n                  color: \"white\",\n                  fontSize: \"20px\"\n                },\n                children: [\"Submit\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this), this.state.showMatrixForm && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Matrix [A]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 56\n              }, this), matrixA, /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Vector [B]\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 37\n              }, this), matrixB, /*#__PURE__*/_jsxDEV(Button, {\n                id: \"matrix_button\",\n                style: {\n                  background: \"blue\",\n                  color: \"white\",\n                  fontSize: \"20px\"\n                },\n                onClick: () => this.cholesky(this.state.row),\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: this.state.showOutputCard && /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Output\",\n            bordered: true,\n            style: {\n              background: \"#3d683d\",\n              color: \"#FFFFFFFF\"\n            },\n            onChange: this.handleChange,\n            id: \"answerCard\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: \"24px\",\n                fontWeight: \"bold\"\n              },\n              children: output\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Cholesky;","map":{"version":3,"sources":["/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/src/Calculate/Linear Algebra/Cholesky.js"],"names":["React","Component","Card","Input","Button","format","InputStyle","background","color","fontWeight","fontSize","A","B","matrixA","matrixB","output","Cholesky","constructor","state","row","column","showDimentionForm","showMatrixForm","showOutputCard","handleChange","bind","cholesky","n","initMatrix","x","Array","y","i","temp","matrixL","j","Math","sqrt","k","sum","setState","summation","L","parseInt","printFraction","value","fraction","createMatrix","push","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","parseFloat","document","getElementById","event","target","name","render","padding","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Card, Input, Button} from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { format } from 'mathjs';\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\", \n    fontWeight: \"bold\", \n    fontSize: \"24px\"\n\n};\n\nvar A = [], B = [], matrixA = [], matrixB = [], output = []\nclass Cholesky extends Component {\n    \n    constructor() {\n        super();\n        this.state = {\n            row: 0,\n            column: 0,\n            showDimentionForm : true,\n            showMatrixForm: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.cholesky = this.cholesky.bind(this)\n    \n    }\n\n    cholesky(n) {\n        this.initMatrix();\n        var  x  = new Array(n);\n        var  y  = new Array(n)\n\n        if (matrixA[0][0] === 0) {\n            for (var i=0 ; i<n ; i++) {\n                var temp = A[0][i];\n                matrixA[0][i] = B[i][i];\n                matrixB[0][i] = temp;\n            }\n        }\n        var matrixL = new Array(n);\n        for(i=0;i<n;i++){\n            matrixL[i]  = new Array(n); \n            for(var j=0;j<n;j++){\n                matrixL[i][j] = 0;\n            }\n            x[i] = 0;\n            y[i] = 0;\n        }\n        matrixL[0][0] = Math.sqrt(matrixA[0][0]);\n        for(var k=1;k<n;k++){\n\n            for(i=0;i<k;i++){\n                var sum = 0;\n                if(i!==0){\n                    for(j=0;j<i;j++){\n                        sum += matrixL[i][j]*matrixL[k][j];\n                        //console.log(sum);\n                    }\n                }\n                matrixL[k][i]= (matrixA[i][k]-sum)/matrixL[i][i];//ได้ค่า L ที่ไม่ใช่แนวทะแยง\n            }\n            sum = 0;\n            for(j=0;j<k;j++){\n                sum += matrixL[k][j]*matrixL[k][j];\n            }\n            matrixL[k][k] = Math.sqrt(matrixA[k][k]-sum);\n        }\n     ;\n        y[0] = matrixB[0]/matrixL[0][0];\n        for(i=1;i<n;i++){\n            sum = 0;\n            for(j=0;j<i;j++){\n                sum += matrixL[i][j]*y[j];\n            }\n            y[i] = (matrixB[i]-sum)/matrixL[i][i];\n        }\n   \n        x[n-1] = y[n-1]/matrixL[n-1][n-1];\n        for(i=this.state.row-2;i>=0;i--){\n            sum = 0;\n            for(j=i+1;j<this.state.row;j++){\n                sum += matrixL[j][i]*x[j];\n            }\n            x[i] = (y[i]-sum)/matrixL[i][i];\n        }\n\n        this.setState({\n            showOutputCard: true\n        });\n    }\n    summation(L, k) {\n        var sum = 0\n        for (var i=0 ; i<parseInt(this.state.row) ; i++) {\n            for (var j=0 ; j<i-2 ; j++) {\n                sum+= L[i][j]*L[k][j]\n            }\n        }\n        return sum\n    }\n    printFraction (value) {\n        return format(value, { fraction: 'ratio' })\n    }\n\n    createMatrix(row, column) {\n        for (var i=0 ; i<row ; i++) {\n            for (var j=0 ; j<column ; j++) {\n                matrixA.push(<Input style={{\n                    width: \"18%\",\n                    height: \"50%\", \n                    backgroundColor:\"#06d9a0\", \n                    marginInlineEnd: \"5%\", \n                    marginBlockEnd: \"5%\",\n                    color: \"white\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }} \n                id={\"a\"+(i+1)+\"\"+(j+1)} key={\"a\"+(i+1)+\"\"+(j+1)} placeholder={\"a\"+(i+1)+\"\"+(j+1)} />)  \n            }\n            matrixA.push(<br/>)\n            matrixB.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\", \n                backgroundColor:\"black\", \n                marginInlineEnd: \"5%\", \n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }} \n            id={\"b\"+(i+1)} key={\"b\"+(i+1)} placeholder={\"b\"+(i+1)} />)\n                \n            \n        }\n\n        this.setState({\n            showDimentionForm: false,\n            showMatrixForm: true,\n        })\n        \n\n    }\n    initMatrix() {\n        for(var i=0 ; i<this.state.row ; i++) {\n            A[i] = []\n            for(var j=0 ; j<this.state.column ; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return(\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h2 style={{color: \"black\", fontWeight: \"bold\"}}>Cholesky Decomposition</h2>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                        bordered={true}\n                        style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\"}}\n                        onChange={this.handleChange}\n                        >\n                            \n                            \n                            {this.state.showDimentionForm && \n                                <div>\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\n                                    <Button id=\"dimention_button\" onClick= {\n                                        ()=>this.createMatrix(this.state.row, this.state.column)\n                                        }  \n                                        style={{background: \"#4caf50\", color: \"white\", fontSize: \"20px\"}}>\n                                        Submit<br></br>\n                                    </Button>\n                                </div> \n                            }\n                            \n                            {this.state.showMatrixForm && \n                                <div>\n                                    <h2>Matrix [A]</h2><br/>{matrixA}\n                                    <h2>Vector [B]<br/></h2>{matrixB}\n                                    <Button \n                                        id=\"matrix_button\"  \n                                        style={{background: \"blue\", color: \"white\", fontSize: \"20px\"}}\n                                        onClick={()=>this.cholesky(this.state.row)}>\n                                        Submit\n                                    </Button>\n                                </div>\n                            }\n                        \n                            \n                        </Card>                        \n                    </div>\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                            title={\"Output\"}\n                            bordered={true}\n                            style={{ background: \"#3d683d\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}  id=\"answerCard\">\n                                <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>{output}</p>\n                            </Card>\n                        }   \n                    </div>\n                </div>     \n            </div>\n        );\n    }\n}\nexport default Cholesky;\n\n\n\n"]},"metadata":{},"sourceType":"module"}