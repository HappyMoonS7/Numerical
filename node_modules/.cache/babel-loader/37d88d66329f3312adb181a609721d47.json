{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bovornpoljiturai/Desktop/Fluke_Numer_web/src/Calculate/Root of Equation/Secant.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { error, func } from '../../services/Services';\nimport Graph from '../../components/Graph';\nconst InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar dataInTable = [];\nconst columns = [{\n  title: \"Iteration\",\n  dataIndex: \"iteration\",\n  key: \"iteration\"\n}, {\n  title: \"Y\",\n  dataIndex: \"y\",\n  key: \"y\"\n}, {\n  title: \"Error\",\n  key: \"error\",\n  dataIndex: \"error\"\n}];\n\nclass Secant extends Component {\n  constructor() {\n    super();\n    this.state = {\n      fx: \"\",\n      x0: 0,\n      x1: 0,\n      showOutputCard: false,\n      showGraph: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.secant = this.secant.bind(this);\n  }\n\n  secant(x0, x1) {\n    var x = [],\n        y = 0,\n        epsilon = parseFloat(0.000000);\n    var n = 1,\n        i = 1;\n    var data = [];\n    data['y'] = [];\n    data['error'] = [];\n    x.push(x0);\n    x.push(x1);\n    data['y'][0] = x0;\n    data['error'][0] = \"---\";\n\n    do {\n      y = x[i] - func(this.state.fx, x[i]) * (x[i] - x[i - 1]) / (func(this.state.fx, x[i]) - func(this.state.fx, x[i - 1]));\n      x.push(y);\n      epsilon = error(y, x[i]);\n      data['y'][n] = y.toFixed(8);\n      data['error'][n] = Math.abs(epsilon).toFixed(8);\n      n++;\n      i++;\n    } while (Math.abs(epsilon) > 0.000001);\n\n    this.createTable(data['y'], data['error']);\n    this.setState({\n      showOutputCard: true,\n      showGraph: true\n    });\n  }\n\n  createTable(y, error) {\n    dataInTable = [];\n\n    for (var i = 0; i < y.length; i++) {\n      dataInTable.push({\n        iteration: i + 1,\n        y: y[i],\n        error: error[i]\n      });\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    let _this$state = this.state,\n        fx = _this$state.fx,\n        x0 = _this$state.x0,\n        x1 = _this$state.x1;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"#FFFF\",\n        padding: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        children: \"Secant Method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            bordered: true,\n            style: {\n              background: \"gray\",\n              borderRadius: \"15px\",\n              color: \"#FFFFFFFF\"\n            },\n            onChange: this.handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"f(x)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              size: \"large\",\n              name: \"fx\",\n              style: InputStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              size: \"large\",\n              name: \"x0\",\n              style: InputStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              size: \"large\",\n              name: \"x1\",\n              style: InputStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 108\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 114\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"submit_button\",\n              onClick: () => this.secant(parseFloat(x0), parseFloat(x1)),\n              style: {\n                background: \"#4caf50\",\n                color: \"white\"\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: this.state.showGraph && /*#__PURE__*/_jsxDEV(Graph, {\n            fx: fx,\n            title: \"Secant Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: this.state.showOutputCard && /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Output\",\n          bordered: true,\n          style: {\n            width: \"100%\",\n            background: \"#2196f3\",\n            color: \"#FFFFFFFF\"\n          },\n          id: \"outputCard\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            columns: columns,\n            dataSource: dataInTable,\n            bodyStyle: {\n              fontWeight: \"bold\",\n              fontSize: \"18px\",\n              color: \"black\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Secant;","map":{"version":3,"sources":["/Users/bovornpoljiturai/Desktop/Fluke_Numer_web/src/Calculate/Root of Equation/Secant.js"],"names":["React","Component","Card","Input","Button","Table","error","func","Graph","InputStyle","background","color","fontWeight","fontSize","dataInTable","columns","title","dataIndex","key","Secant","constructor","state","fx","x0","x1","showOutputCard","showGraph","handleChange","bind","secant","x","y","epsilon","parseFloat","n","i","data","push","toFixed","Math","abs","createTable","setState","length","iteration","event","target","name","value","render","padding","borderRadius","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { error, func } from '../../services/Services';\nimport Graph from '../../components/Graph';\n\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\nvar dataInTable = []\nconst columns = [\n    {\n        title: \"Iteration\",\n        dataIndex: \"iteration\",\n        key: \"iteration\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    },\n    {\n        title: \"Error\",\n        key: \"error\",\n        dataIndex: \"error\"\n    }\n];\n\nclass Secant extends Component {\n    constructor() {\n        super();\n        this.state = {\n            fx: \"\",\n            x0: 0,\n            x1: 0,\n            showOutputCard: false,\n            showGraph: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.secant = this.secant.bind(this);\n    }\n\n    secant(x0, x1) {\n        var x = [], y = 0, epsilon = parseFloat(0.000000);\n        var n = 1, i = 1;\n        var data = []\n        data['y'] = []\n        data['error'] = []\n        x.push(x0);\n        x.push(x1);\n        data['y'][0] = x0;\n        data['error'][0] = \"---\";\n\n        do {\n            y = x[i] - (func(this.state.fx, x[i]) * ((x[i] - x[i - 1]))) / (func(this.state.fx, x[i]) - func(this.state.fx, x[i - 1]));\n            x.push(y);\n            epsilon = error(y, x[i]);\n            data['y'][n] = y.toFixed(8);\n            data['error'][n] = Math.abs(epsilon).toFixed(8);\n\n            n++;\n            i++;\n\n        } while (Math.abs(epsilon) > 0.000001);\n        this.createTable(data['y'], data['error']);\n        this.setState({\n            showOutputCard: true,\n            showGraph: true\n        })\n\n\n    }\n\n    createTable(y, error) {\n        dataInTable = []\n        for (var i = 0; i < y.length; i++) {\n            dataInTable.push({\n                iteration: i + 1,\n                y: y[i],\n                error: error[i]\n            });\n        }\n\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    render() {\n        let { fx, x0, x1 } = this.state;\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Secant Method</h2>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n                            <h2>f(x)</h2><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\n                            <h2>X<sub>0</sub></h2><Input size=\"large\" name=\"x0\" style={InputStyle}></Input>\n                            <h2>X<sub>1</sub></h2><Input size=\"large\" name=\"x1\" style={InputStyle}></Input><br /><br />\n                            <Button id=\"submit_button\" onClick={\n                                () => this.secant(parseFloat(x0), parseFloat(x1))\n                            }\n                                style={{ background: \"#4caf50\", color: \"white\" }}>Submit</Button>\n\n                        </Card>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showGraph && <Graph fx={fx} title=\"Secant Method\" />}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.state.showOutputCard &&\n                        <Card\n                            title={\"Output\"}\n                            bordered={true}\n                            style={{ width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\" }}\n                            id=\"outputCard\"\n                        >\n                            <Table columns={columns} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}\n                            ></Table>\n                        </Card>\n                    }\n                </div>\n\n            </div>\n\n        );\n    }\n}\nexport default Secant;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}