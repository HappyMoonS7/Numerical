{"ast":null,"code":"import _defineProperty from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/src/Calculate/Linear Algebra/Gradient.js\";\nimport { Button, Card, Input, Table } from 'antd';\nimport 'antd/dist/antd.css';\nimport { add, det, multiply, subtract, transpose } from 'mathjs';\nimport React, { Component } from 'react';\nimport '../../screen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar A = [],\n    B = [],\n    matrixA = [],\n    matrixB = [],\n    matrixX = [],\n    x,\n    epsilon,\n    dataInTable = [],\n    count = 1,\n    output;\nvar columns = [{\n  title: \"Iteration\",\n  dataIndex: \"iteration\",\n  key: \"iteration\"\n}, {\n  title: \"λ\",\n  dataIndex: \"lambda\",\n  key: \"lambda\"\n}, {\n  title: \"{X}\",\n  dataIndex: \"X\",\n  key: \"X\"\n}, {\n  title: \"Error\",\n  dataIndex: \"error\",\n  key: \"error\"\n}];\n\nvar Gradient = /*#__PURE__*/function (_Component) {\n  _inherits(Gradient, _Component);\n\n  var _super = _createSuper(Gradient);\n\n  function Gradient() {\n    var _this;\n\n    _classCallCheck(this, Gradient);\n\n    _this = _super.call(this);\n    _this.state = {\n      row: 0,\n      column: 0,\n      showDimentionForm: true,\n      showMatrixForm: false,\n      showOutputCard: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.conjugate_gradient = _this.conjugate_gradient.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Gradient, [{\n    key: \"positive_definite\",\n    value: function positive_definite(dimention) {\n      var tempMatrix = [];\n\n      for (var i = 0; i < dimention; i++) {\n        tempMatrix[i] = [];\n\n        for (var j = 0; j < dimention; j++) {\n          tempMatrix[i][j] = A[i][j];\n        }\n      }\n\n      if (det(tempMatrix) <= 0) {\n        return false;\n      }\n\n      if (dimention !== this.state.row - 1) {\n        return this.positive_definite(++dimention);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"conjugate_gradient\",\n    value: function conjugate_gradient() {\n      this.initMatrix();\n\n      if (!this.positive_definite(1)) {\n        output = \"This matrix doesn't positive definite\";\n        this.setState({\n          showOutputCard: true\n        });\n        return false;\n      } //find {R0}\n\n\n      var R = subtract(multiply(A, x), B);\n      console.log(R); //find D0\n\n      var D = multiply(R, -1);\n      console.log(D);\n\n      do {\n        //find λ\n        var λ = multiply(multiply(transpose(D), R), -1) / multiply(multiply(transpose(D), A), D);\n        console.log(λ);\n        /*------------------------------------------------------------------*/\n        //find new {X}\n\n        x = add(x, multiply(λ, D));\n        console.log(x); //find new {R}\n\n        R = subtract(multiply(A, x), B);\n        console.log(R); //find epsilon\n\n        epsilon = Math.sqrt(multiply(transpose(R), R)).toFixed(8);\n        this.appendTable(λ, JSON.stringify(x).split(',').join(\",\\n\"), epsilon);\n        console.log(epsilon);\n        var α = multiply(multiply(transpose(R), A), D) / multiply(transpose(D), multiply(A, D)).toFixed(8);\n        console.log(α);\n        D = add(multiply(R, -1), multiply(α, D));\n        console.log(D);\n      } while (epsilon > 0.000001);\n\n      output = x;\n      this.setState({\n        showOutputCard: true\n      });\n    }\n  }, {\n    key: \"createMatrix\",\n    value: function createMatrix(row, column) {\n      A = [];\n      B = [];\n      matrixA = [];\n      matrixB = [];\n      matrixX = [];\n      x = [];\n      dataInTable = [];\n\n      for (var i = 1; i <= row; i++) {\n        for (var j = 1; j <= column; j++) {\n          matrixA.push( /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              width: \"18%\",\n              height: \"50%\",\n              backgroundColor: \"#06d9a0\",\n              marginInlineEnd: \"5%\",\n              marginBlockEnd: \"5%\",\n              color: \"white\",\n              fontSize: \"18px\",\n              fontWeight: \"bold\"\n            },\n            id: \"a\" + i + \"\" + j,\n            placeholder: \"a\" + i + \"\" + j\n          }, \"a\" + i + \"\" + j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 30\n          }, this));\n        }\n\n        matrixA.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 26\n        }, this));\n        matrixB.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"18%\",\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"b\" + i,\n          placeholder: \"b\" + i\n        }, \"b\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 26\n        }, this));\n        matrixX.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"18%\",\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"x\" + i,\n          placeholder: \"x\" + i\n        }, \"x\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 26\n        }, this));\n      }\n\n      this.setState({\n        showDimentionForm: false,\n        showMatrixForm: true\n      });\n    }\n  }, {\n    key: \"initMatrix\",\n    value: function initMatrix() {\n      for (var i = 0; i < this.state.row; i++) {\n        A[i] = [];\n\n        for (var j = 0; j < this.state.column; j++) {\n          A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n        }\n\n        B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n        x.push(parseFloat(document.getElementById(\"x\" + (i + 1)).value));\n      }\n    }\n  }, {\n    key: \"appendTable\",\n    value: function appendTable(lambda, x, error) {\n      dataInTable.push({\n        iteration: count++,\n        lambda: lambda,\n        X: x,\n        error: error\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"#FFFF\",\n          padding: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"black\",\n            fontWeight: \"bold\"\n          },\n          children: \"Conjugate Gradient Iteration Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                background: \"gray\",\n                borderRadius: \"15px\",\n                color: \"#FFFFFFFF\"\n              },\n              onChange: this.handleChange,\n              children: [this.state.showDimentionForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Row\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"row\",\n                  style: InputStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Column\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"column\",\n                  style: InputStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 52\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"dimention_button\",\n                  onClick: function onClick() {\n                    _this2.createMatrix(_this2.state.row, _this2.state.column);\n                  },\n                  style: {\n                    background: \"#4caf50\",\n                    color: \"white\"\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this), this.state.showMatrixForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Matrix [A]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 56\n                }, this), matrixA, /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"Vector [B]\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 51\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 37\n                }, this), matrixB, /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"Initial X\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 50\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 37\n                }, this), matrixX, /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"matrix_button\",\n                  style: {\n                    background: \"blue\",\n                    color: \"white\"\n                  },\n                  onClick: function onClick() {\n                    return _this2.conjugate_gradient(parseInt(_this2.state.row));\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: this.state.showOutputCard && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                title: \"Output\",\n                bordered: true,\n                style: {\n                  background: \"#3d683d\",\n                  color: \"#FFFFFFFF\"\n                },\n                onChange: this.handleChange,\n                id: \"answerCard\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: \"24px\",\n                    fontWeight: \"bold\"\n                  },\n                  children: JSON.stringify(output)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }, this), this.state.showOutputCard && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Output\",\n            bordered: true,\n            style: {\n              width: \"100%\",\n              background: \"#2196f3\",\n              color: \"#FFFFFFFF\"\n            },\n            id: \"outputCard\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              columns: columns,\n              dataSource: dataInTable,\n              bordered: true,\n              bodyStyle: {\n                fontWeight: \"bold\",\n                fontSize: \"18px\",\n                color: \"black\",\n                overflowX: \"scroll\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Gradient;\n}(Component);\n\nexport default Gradient;","map":{"version":3,"sources":["/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/src/Calculate/Linear Algebra/Gradient.js"],"names":["Button","Card","Input","Table","add","det","multiply","subtract","transpose","React","Component","InputStyle","background","color","fontWeight","fontSize","A","B","matrixA","matrixB","matrixX","x","epsilon","dataInTable","count","output","columns","title","dataIndex","key","Gradient","state","row","column","showDimentionForm","showMatrixForm","showOutputCard","handleChange","bind","conjugate_gradient","dimention","tempMatrix","i","j","positive_definite","initMatrix","setState","R","console","log","D","λ","Math","sqrt","toFixed","appendTable","JSON","stringify","split","join","α","push","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","parseFloat","document","getElementById","value","lambda","error","iteration","X","event","target","name","padding","borderRadius","createMatrix","parseInt","overflowX"],"mappings":"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","sourcesContent":["import { Button, Card, Input, Table } from 'antd';\nimport 'antd/dist/antd.css';\nimport { add, det, multiply, subtract, transpose } from 'mathjs';\nimport React, { Component } from 'react';\nimport '../../screen.css';\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\n\nvar A = [], B = [], matrixA = [], matrixB = [], matrixX = [], x, epsilon, dataInTable = [], count = 1, output\nvar columns = [\n    {\n        title: \"Iteration\",\n        dataIndex: \"iteration\",\n        key: \"iteration\"\n    },\n    {\n        title: \"λ\",\n        dataIndex: \"lambda\",\n        key: \"lambda\"\n    },\n    {\n        title: \"{X}\",\n        dataIndex: \"X\",\n        key: \"X\"\n    },\n    {\n        title: \"Error\",\n        dataIndex: \"error\",\n        key: \"error\"\n    }\n];\nclass Gradient extends Component {\n    constructor() {\n        super();\n        this.state = {\n            row: 0,\n            column: 0,\n            showDimentionForm: true,\n            showMatrixForm: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.conjugate_gradient = this.conjugate_gradient.bind(this);\n\n    }\n    positive_definite(dimention) {\n        var tempMatrix = []\n        for (var i = 0; i < dimention; i++) {\n            tempMatrix[i] = []\n            for (var j = 0; j < dimention; j++) {\n                tempMatrix[i][j] = A[i][j];\n            }\n        }\n        if (det(tempMatrix) <= 0) {\n            return false;\n        }\n        if (dimention !== this.state.row - 1) {\n            return this.positive_definite(++dimention);\n        }\n        return true;\n    }\n\n    conjugate_gradient() {\n        this.initMatrix();\n        if (!this.positive_definite(1)) {\n            output = \"This matrix doesn't positive definite\"\n            this.setState({\n                showOutputCard: true\n            });\n            return false;\n        }\n        //find {R0}\n        var R = subtract(multiply(A, x), B);\n        console.log(R)\n        //find D0\n        var D = multiply(R, -1);\n        console.log(D)\n        do {\n            //find λ\n            var λ = (multiply(multiply(transpose(D), R), -1)) /\n                (multiply(multiply(transpose(D), A), D))\n            console.log(λ)\n            /*------------------------------------------------------------------*/\n\n            //find new {X}\n            x = add(x, multiply(λ, D));\n            console.log(x)\n            //find new {R}\n            R = subtract(multiply(A, x), B);\n            console.log(R)\n            //find epsilon\n            epsilon = Math.sqrt(multiply(transpose(R), R)).toFixed(8);\n            this.appendTable(λ, JSON.stringify(x).split(',').join(\",\\n\"), epsilon);\n            console.log(epsilon)\n            var α = (multiply(multiply(transpose(R), A), D)) /\n                multiply(transpose(D), multiply(A, D)).toFixed(8);\n            console.log(α)\n            D = add(multiply(R, -1), multiply(α, D))\n            console.log(D)\n        } while (epsilon > 0.000001);\n        output = x\n \n        this.setState({  \n            showOutputCard: true\n        });\n\n\n    }\n    createMatrix(row, column) {\n        A = []\n        B = []\n        matrixA = []\n        matrixB = []\n        matrixX = []\n        x = []\n        dataInTable = []\n        for (var i = 1; i <= row; i++) {\n            for (var j = 1; j <= column; j++) {\n                matrixA.push(<Input style={{\n                    width: \"18%\",\n                    height: \"50%\",\n                    backgroundColor: \"#06d9a0\",\n                    marginInlineEnd: \"5%\",\n                    marginBlockEnd: \"5%\",\n                    color: \"white\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }}\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\n            }\n            matrixA.push(<br />)\n            matrixB.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\",\n                backgroundColor: \"black\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\n            matrixX.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\",\n                backgroundColor: \"black\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"x\" + i} key={\"x\" + i} placeholder={\"x\" + i} />)\n\n\n        }\n\n        this.setState({\n            showDimentionForm: false,\n            showMatrixForm: true,\n        })\n\n\n\n    }\n    initMatrix() {\n        for (var i = 0; i < this.state.row; i++) {\n            A[i] = []\n            for (var j = 0; j < this.state.column; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n            x.push(parseFloat(document.getElementById(\"x\" + (i + 1)).value));\n        }\n    }\n    appendTable(lambda, x, error) {\n        dataInTable.push({\n            iteration: count++,\n            lambda: lambda,\n            X: x,\n            error: error\n        });\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Conjugate Gradient Iteration Method</h2>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n\n                            {this.state.showDimentionForm &&\n                                <div>\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\n                                    <Button id=\"dimention_button\" onClick={\n                                        () => { this.createMatrix(this.state.row, this.state.column) }\n                                    }\n                                        style={{ background: \"#4caf50\", color: \"white\" }}>\n                                        Submit\n                                    </Button>\n                                </div>\n                            }\n\n                            {this.state.showMatrixForm &&\n                                <div>\n                                    <h2>Matrix [A]</h2><br />{matrixA}\n                                    <h2>Vector [B]<br /></h2>{matrixB}\n                                    <h2>Initial X<br /></h2>{matrixX}\n                                    <Button\n                                        id=\"matrix_button\"\n                                        style={{ background: \"blue\", color: \"white\" }}\n                                        onClick={() => this.conjugate_gradient(parseInt(this.state.row))}>\n                                        Submit\n                                    </Button>\n                                </div>\n\n                            }\n                        </Card>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <div>\n                                <Card\n                                    title={\"Output\"}\n                                    bordered={true}\n                                    style={{ background: \"#3d683d\", color: \"#FFFFFFFF\" }}\n                                    onChange={this.handleChange} id=\"answerCard\">\n                                    <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{JSON.stringify(output)}</p>\n                                </Card>\n\n                            </div>\n\n                        }\n                    </div>\n                </div>\n                {/* <div className=\"row\"> */}\n                    {this.state.showOutputCard &&\n                        <div>\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{ width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\" }}\n                                id=\"outputCard\"\n                            >\n                                <Table columns={columns} dataSource={dataInTable} bordered={true} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\", overflowX: \"scroll\" }}\n                                ></Table>\n                            </Card>\n\n                        </div>\n\n                    }\n                {/* </div> */}\n\n\n            </div>\n        );\n    }\n}\nexport default Gradient;\n\n\n\n"]},"metadata":{},"sourceType":"module"}