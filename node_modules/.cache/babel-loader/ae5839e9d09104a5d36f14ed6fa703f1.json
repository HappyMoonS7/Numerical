{"ast":null,"code":"import _defineProperty from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/src/Calculate/Regression/MultipleLinear.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { lusolve, round, squeeze } from 'mathjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar columns = [{\n  title: \"No.\",\n  dataIndex: \"no\",\n  key: \"no\"\n}, {\n  title: \"X\",\n  dataIndex: \"x\",\n  key: \"x\"\n}, {\n  title: \"Y\",\n  dataIndex: \"y\",\n  key: \"y\"\n}];\nvar x, y, tableTag, fx, regressionMatrixX, regressionMatrixY, matrixA, matrixB, answer;\n\nvar MultipleLinear = /*#__PURE__*/function (_Component) {\n  _inherits(MultipleLinear, _Component);\n\n  var _super = _createSuper(MultipleLinear);\n\n  function MultipleLinear() {\n    var _this;\n\n    _classCallCheck(this, MultipleLinear);\n\n    _this = _super.call(this);\n    x = [];\n    y = [];\n    tableTag = [];\n    _this.state = {\n      nPoints: 0,\n      X: 0,\n      interpolatePoint: 0,\n      showInputForm: true,\n      showTableInput: false,\n      showOutputCard: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MultipleLinear, [{\n    key: \"createTableInput\",\n    value: function createTableInput(n, X) {\n      for (var i = 1; i <= n; i++) {\n        x[i] = [];\n\n        for (var j = 1; j <= X; j++) {\n          x[i].push( /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              width: \"70%\",\n              height: \"50%\",\n              backgroundColor: \"black\",\n              marginInlineEnd: \"5%\",\n              marginBlockEnd: \"5%\",\n              color: \"white\",\n              fontSize: \"18px\",\n              fontWeight: \"bold\",\n              justifyContent: \"center\"\n            },\n            id: \"x\" + i + \"\" + j,\n            placeholder: \"x\" + i + \"\" + j\n          }, \"x\" + i + \"\" + j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 27\n          }, this));\n        }\n\n        y.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"100%\",\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"y\" + i,\n          placeholder: \"y\" + i\n        }, \"y\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 20\n        }, this));\n        tableTag.push({\n          no: i,\n          x: x[i],\n          y: y[i - 1]\n        });\n      }\n\n      regressionMatrixX = new Array(X + 1);\n      regressionMatrixY = new Array(X + 1);\n\n      for (i = 1; i <= X + 1; i++) {\n        regressionMatrixX[i] = [];\n\n        for (j = 1; j <= X + 1; j++) {\n          regressionMatrixX[i][j] = [];\n        }\n      }\n\n      this.setState({\n        showInputForm: false,\n        showTableInput: true\n      });\n    }\n  }, {\n    key: \"initialValue\",\n    value: function initialValue(n, X) {\n      x = new Array(X + 1);\n      y = [];\n\n      for (var i = 1; i <= X; i++) {\n        x[i] = [];\n\n        for (var j = 1; j <= n; j++) {\n          x[i][j] = parseInt(document.getElementById(\"x\" + j + \"\" + i).value);\n        }\n      }\n\n      for (i = 1; i <= n; i++) {\n        y[i] = parseFloat(document.getElementById(\"y\" + i).value);\n      }\n    }\n  }, {\n    key: \"multipleLinear\",\n    value: function multipleLinear(n, X) {\n      for (var i = 1; i <= X + 1; i++) {\n        for (var j = i; j <= X + 1; j++) {\n          if (i === 1) {\n            if (j === 1) {\n              regressionMatrixX[i][j] = n;\n              regressionMatrixY[j] = this.summation(y);\n            } else {\n              regressionMatrixX[i][j] = regressionMatrixX[j][i] = this.summation(x[j - 1]);\n              regressionMatrixY[j] = this.summationOfTwo(x[j - 1], y);\n            }\n          } else {\n            regressionMatrixX[i][j] = regressionMatrixX[j][i] = this.summationOfTwo(x[i - 1], x[j - 1]);\n          }\n        }\n      }\n\n      this.findX(X);\n    }\n  }, {\n    key: \"findX\",\n    value: function findX(X) {\n      matrixA = new Array(X + 1);\n      matrixB = new Array(X + 1);\n\n      for (var i = 0; i < X + 1; i++) {\n        matrixA[i] = [];\n\n        for (var j = 0; j < X + 1; j++) {\n          matrixA[i][j] = regressionMatrixX[i + 1][j + 1];\n        }\n\n        matrixB[i] = regressionMatrixY[i + 1];\n      }\n\n      answer = squeeze(round(lusolve(matrixA, matrixB)));\n      console.log(answer);\n    }\n  }, {\n    key: \"summation\",\n    value: function summation(A) {\n      var sum = 0;\n\n      for (var i = 1; i < A.length; i++) {\n        sum += A[i];\n      }\n\n      return sum;\n    }\n  }, {\n    key: \"summationOfTwo\",\n    value: function summationOfTwo(A, B) {\n      var sum = 0;\n\n      for (var i = 1; i < A.length; i++) {\n        sum += A[i] * B[i];\n      }\n\n      return sum;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"#FFFF\",\n          padding: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"black\",\n            fontWeight: \"bold\"\n          },\n          children: \"Multiple Linear Regression\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                background: \"gray\",\n                borderRadius: \"15px\",\n                color: \"#FFFFFFFF\"\n              },\n              onChange: this.handleChange,\n              children: [this.state.showInputForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Number of X\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"X\",\n                  style: InputStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Number of points(n)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"nPoints\",\n                  style: InputStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 65\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"dimention_button\",\n                  onClick: function onClick() {\n                    return _this2.createTableInput(parseInt(_this2.state.nPoints), parseInt(_this2.state.X));\n                  },\n                  style: {\n                    background: \"#4caf50\",\n                    color: \"white\",\n                    fontSize: \"20px\"\n                  },\n                  children: [\"Submit\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 47\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this), this.state.showTableInput && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Table, {\n                  columns: columns,\n                  dataSource: tableTag,\n                  pagination: false,\n                  bordered: true,\n                  bodyStyle: {\n                    fontWeight: \"bold\",\n                    fontSize: \"18px\",\n                    color: \"white\",\n                    overflowY: \"scroll\",\n                    minWidth: 120,\n                    maxHeight: 300\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"matrix_button\",\n                  style: {\n                    background: \"blue\",\n                    color: \"white\",\n                    fontSize: \"20px\"\n                  },\n                  onClick: function onClick() {\n                    _this2.initialValue(parseInt(_this2.state.nPoints), parseInt(_this2.state.X));\n\n                    _this2.multipleLinear(parseInt(_this2.state.nPoints), parseInt(_this2.state.X));\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: this.state.showOutputCard && /*#__PURE__*/_jsxDEV(Card, {\n              title: \"Output\",\n              bordered: true,\n              style: {\n                border: \"2px solid black\",\n                background: \"rgb(61, 104, 61) none repeat scroll 0% 0%\",\n                color: \"white\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontSize: \"24px\",\n                  fontWeight: \"bold\"\n                },\n                children: fx\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return MultipleLinear;\n}(Component);\n\nexport default MultipleLinear;","map":{"version":3,"sources":["/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/src/Calculate/Regression/MultipleLinear.js"],"names":["React","Component","Card","Input","Button","Table","lusolve","round","squeeze","InputStyle","background","color","fontWeight","fontSize","columns","title","dataIndex","key","x","y","tableTag","fx","regressionMatrixX","regressionMatrixY","matrixA","matrixB","answer","MultipleLinear","state","nPoints","X","interpolatePoint","showInputForm","showTableInput","showOutputCard","handleChange","bind","n","i","j","push","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","justifyContent","no","Array","setState","parseInt","document","getElementById","value","parseFloat","summation","summationOfTwo","findX","console","log","A","sum","length","B","event","target","name","padding","borderRadius","createTableInput","overflowY","minWidth","maxHeight","initialValue","multipleLinear","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { lusolve, round, squeeze } from 'mathjs';\n\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\nvar columns = [\n    {\n        title: \"No.\",\n        dataIndex: \"no\",\n        key: \"no\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    }\n];\nvar x, y, tableTag, fx, regressionMatrixX, regressionMatrixY, matrixA, matrixB, answer\n\nclass MultipleLinear extends Component {\n\n    constructor() {\n        super();\n        x = []\n        y = []\n\n        tableTag = []\n        this.state = {\n            nPoints: 0,\n            X: 0,\n            interpolatePoint: 0,\n            showInputForm: true,\n            showTableInput: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n\n\n    }\n    createTableInput(n, X) {\n        for (var i = 1; i <= n; i++) {\n            x[i] = []\n            for (var j = 1; j <= X; j++) {\n                x[i].push(<Input style={{\n                    width: \"70%\",\n                    height: \"50%\",\n                    backgroundColor: \"black\",\n                    marginInlineEnd: \"5%\",\n                    marginBlockEnd: \"5%\",\n                    color: \"white\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\",\n                    justifyContent: \"center\",\n                }}\n                    id={\"x\" + i + \"\" + j} key={\"x\" + i + \"\" + j} placeholder={\"x\" + i + \"\" + j} />);\n            }\n            y.push(<Input style={{\n                width: \"100%\",\n                height: \"50%\",\n                backgroundColor: \"black\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"y\" + i} key={\"y\" + i} placeholder={\"y\" + i} />);\n            tableTag.push({\n                no: i,\n                x: x[i],\n                y: y[i - 1]\n            })\n\n        }\n        regressionMatrixX = new Array(X + 1)\n        regressionMatrixY = new Array(X + 1)\n        for (i = 1; i <= X + 1; i++) {\n            regressionMatrixX[i] = []\n            for (j = 1; j <= X + 1; j++) {\n                regressionMatrixX[i][j] = []\n            }\n        }\n\n        this.setState({\n            showInputForm: false,\n            showTableInput: true,\n        })\n    }\n    initialValue(n, X) {\n        x = new Array(X + 1)\n        y = []\n        for (var i = 1; i <= X; i++) {\n            x[i] = []\n            for (var j = 1; j <= n; j++) {\n                x[i][j] = parseInt(document.getElementById(\"x\" + j + \"\" + i).value);\n            }\n        }\n        for (i = 1; i <= n; i++) {\n            y[i] = parseFloat(document.getElementById(\"y\" + i).value);\n        }\n    }\n    multipleLinear(n, X) {\n        for (var i = 1; i <= X + 1; i++) {\n            for (var j = i; j <= X + 1; j++) {\n                if (i === 1) {\n                    if (j === 1) {\n                        regressionMatrixX[i][j] = n\n                        regressionMatrixY[j] = this.summation(y)\n                    }\n                    else {\n                        regressionMatrixX[i][j] = regressionMatrixX[j][i] = this.summation(x[j - 1])\n                        regressionMatrixY[j] = this.summationOfTwo(x[j - 1], y)\n                    }\n\n\n                }\n                else {\n                    regressionMatrixX[i][j] = regressionMatrixX[j][i] = this.summationOfTwo(x[i - 1], x[j - 1])\n                }\n            }\n        }\n        this.findX(X)\n    }\n    findX(X) {\n        matrixA = new Array(X + 1)\n        matrixB = new Array(X + 1)\n        for (var i = 0; i < X + 1; i++) {\n            matrixA[i] = []\n            for (var j = 0; j < X + 1; j++) {\n                matrixA[i][j] = regressionMatrixX[i + 1][j + 1]\n            }\n            matrixB[i] = regressionMatrixY[i + 1]\n        }\n        answer = squeeze(round(lusolve(matrixA, matrixB)))\n        console.log(answer)\n    }\n    summation(A) {\n        var sum = 0\n        for (var i = 1; i < A.length; i++) {\n            sum += A[i]\n        }\n        return sum\n    }\n    summationOfTwo(A, B) {\n        var sum = 0\n        for (var i = 1; i < A.length; i++) {\n            sum += A[i] * B[i]\n        }\n        return sum\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Multiple Linear Regression</h2>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n                            {this.state.showInputForm &&\n                                <div>\n                                    <h2>Number of X</h2><Input size=\"large\" name=\"X\" style={InputStyle}></Input>\n                                    <h2>Number of points(n)</h2><Input size=\"large\" name=\"nPoints\" style={InputStyle}></Input>\n                                    <Button id=\"dimention_button\" onClick={\n                                        () => this.createTableInput(parseInt(this.state.nPoints), parseInt(this.state.X))}\n                                        style={{ background: \"#4caf50\", color: \"white\", fontSize: \"20px\" }}>\n                                        Submit<br></br>\n                                    </Button>\n                                </div>\n                            }\n                            {this.state.showTableInput &&\n                                <div>\n                                    <Table columns={columns} dataSource={tableTag} pagination={false} bordered={true} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"white\", overflowY: \"scroll\", minWidth: 120, maxHeight: 300 }}></Table>\n                                    <Button\n                                        id=\"matrix_button\"\n                                        style={{ background: \"blue\", color: \"white\", fontSize: \"20px\" }}\n                                        onClick={() => {\n                                            this.initialValue(parseInt(this.state.nPoints), parseInt(this.state.X));\n                                            this.multipleLinear(parseInt(this.state.nPoints), parseInt(this.state.X))\n                                        }}\n                                    >\n                                        Submit\n                                </Button>\n                                </div>\n                            }\n\n                        </Card>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{ border: \"2px solid black\", background: \"rgb(61, 104, 61) none repeat scroll 0% 0%\", color: \"white\" }}\n                            >\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{fx}</p>\n\n                            </Card>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default MultipleLinear;"]},"metadata":{},"sourceType":"module"}