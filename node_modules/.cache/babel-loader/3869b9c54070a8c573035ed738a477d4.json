{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/src/Calculate/Regression/Linear.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { inv, multiply, sum } from 'mathjs';\nconst InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar columns = [{\n  title: \"No.\",\n  dataIndex: \"no\",\n  key: \"no\"\n}, {\n  title: \"X\",\n  dataIndex: \"x\",\n  key: \"x\"\n}, {\n  title: \"Y\",\n  dataIndex: \"y\",\n  key: \"y\"\n}];\nvar x, y, tableTag, answer;\n\nclass Linear extends Component {\n  constructor() {\n    super();\n    x = [];\n    y = [];\n    tableTag = [];\n    this.state = {\n      nPoints: 0,\n      m: 0,\n      interpolatePoint: 0,\n      showInputForm: true,\n      showTableInput: false,\n      showOutputCard: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  createTableInput(n) {\n    for (var i = 1; i <= n; i++) {\n      x.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"70%\",\n          height: \"50%\",\n          backgroundColor: \"black\",\n          marginInlineEnd: \"5%\",\n          marginBlockEnd: \"5%\",\n          color: \"white\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\",\n          justifyContent: \"center\"\n        },\n        id: \"x\" + i,\n        placeholder: \"x\" + i\n      }, \"x\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 20\n      }, this));\n      y.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"100%\",\n          height: \"50%\",\n          backgroundColor: \"black\",\n          marginInlineEnd: \"5%\",\n          marginBlockEnd: \"5%\",\n          color: \"white\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"y\" + i,\n        placeholder: \"y\" + i\n      }, \"y\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 20\n      }, this));\n      tableTag.push({\n        no: i,\n        x: x[i - 1],\n        y: y[i - 1]\n      });\n    }\n\n    this.setState({\n      showInputForm: false,\n      showTableInput: true\n    });\n  }\n\n  initialValue(n) {\n    x = new Array(n + 1);\n    y = [];\n\n    for (var i = 1; i <= n; i++) {\n      x[i] = parseInt(document.getElementById(\"x\" + i).value);\n    }\n\n    for (i = 1; i <= n; i++) {\n      y[i] = parseFloat(document.getElementById(\"y\" + i).value);\n    }\n  }\n\n  linear(n) {\n    var matrixX = [2],\n        matrixY = [2],\n        exponent = 0;\n\n    for (var i = 0; i < 2; i++) {\n      matrixX[i] = [];\n\n      for (var j = 0; j < 2; j++) {\n        if (i === 0 && j === 0) {\n          matrixX[i][j] = n;\n        } else if (i === 0 && j === 1) {\n          matrixX[i][j] = this.summation(x, 1);\n        } else {\n          matrixX[i][j] = this.summation(x, exponent + j);\n        }\n      }\n\n      exponent++;\n    }\n\n    matrixY[0] = sum(y);\n    matrixY[1] = this.summationOfTwo(x, y);\n    matrixX = inv(matrixX);\n    answer = JSON.stringify(multiply(matrixX, matrixY));\n    this.setState({\n      showOutputCard: true\n    });\n  }\n\n  summation(A, exponent) {\n    var sum = 0;\n\n    for (var i = 1; i < A.length; i++) {\n      sum += Math.pow(A[i], exponent);\n    }\n\n    return sum;\n  }\n\n  summationOfTwo(A, B) {\n    var sum = 0;\n\n    for (var i = 1; i < A.length; i++) {\n      sum += A[i] * B[i];\n    }\n\n    return sum;\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"#FFFF\",\n        padding: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        children: \"Linear Regression\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            bordered: true,\n            style: {\n              background: \"gray\",\n              borderRadius: \"15px\",\n              color: \"#FFFFFFFF\"\n            },\n            onChange: this.handleChange,\n            children: [this.state.showInputForm && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Number of points(n)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"large\",\n                name: \"nPoints\",\n                style: InputStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 65\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                id: \"dimention_button\",\n                onClick: () => this.createTableInput(parseInt(this.state.nPoints), parseInt(this.state.m)),\n                style: {\n                  background: \"#4caf50\",\n                  color: \"white\",\n                  fontSize: \"20px\"\n                },\n                children: [\"Submit\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this), this.state.showTableInput && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Table, {\n                columns: columns,\n                dataSource: tableTag,\n                pagination: false,\n                bordered: true,\n                bodyStyle: {\n                  fontWeight: \"bold\",\n                  fontSize: \"18px\",\n                  color: \"white\",\n                  overflowY: \"scroll\",\n                  minWidth: 120,\n                  maxHeight: 300\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                id: \"matrix_button\",\n                style: {\n                  background: \"blue\",\n                  color: \"white\",\n                  fontSize: \"20px\"\n                },\n                onClick: () => {\n                  this.initialValue(parseInt(this.state.nPoints));\n                  this.linear(parseInt(this.state.nPoints));\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: this.state.showOutputCard && /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Output\",\n            bordered: true,\n            style: {\n              border: \"2px solid black\",\n              background: \"rgb(61, 104, 61) none repeat scroll 0% 0%\",\n              color: \"white\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: \"24px\",\n                fontWeight: \"bold\"\n              },\n              children: [\"x = \", JSON.stringify(answer)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Linear;","map":{"version":3,"sources":["/Users/bovornpoljiturai/Desktop/Numerical-method(CSB)/src/Calculate/Regression/Linear.js"],"names":["React","Component","Card","Input","Button","Table","inv","multiply","sum","InputStyle","background","color","fontWeight","fontSize","columns","title","dataIndex","key","x","y","tableTag","answer","Linear","constructor","state","nPoints","m","interpolatePoint","showInputForm","showTableInput","showOutputCard","handleChange","bind","createTableInput","n","i","push","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","justifyContent","no","setState","initialValue","Array","parseInt","document","getElementById","value","parseFloat","linear","matrixX","matrixY","exponent","j","summation","summationOfTwo","JSON","stringify","A","length","Math","pow","B","event","target","name","render","padding","borderRadius","overflowY","minWidth","maxHeight","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { inv, multiply, sum } from 'mathjs';\n\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\nvar columns = [\n    {\n        title: \"No.\",\n        dataIndex: \"no\",\n        key: \"no\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    }\n];\nvar x, y, tableTag, answer\n\nclass Linear extends Component {\n\n    constructor() {\n        super();\n        x = []\n        y = []\n\n        tableTag = []\n        this.state = {\n            nPoints: 0,\n            m: 0,\n            interpolatePoint: 0,\n            showInputForm: true,\n            showTableInput: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n\n\n    }\n    createTableInput(n) {\n        for (var i = 1; i <= n; i++) {\n            x.push(<Input style={{\n                width: \"70%\",\n                height: \"50%\",\n                backgroundColor: \"black\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\",\n                justifyContent: \"center\"\n            }}\n                id={\"x\" + i} key={\"x\" + i} placeholder={\"x\" + i} />);\n            y.push(<Input style={{\n                width: \"100%\",\n                height: \"50%\",\n                backgroundColor: \"black\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"y\" + i} key={\"y\" + i} placeholder={\"y\" + i} />);\n            tableTag.push({\n                no: i,\n                x: x[i - 1],\n                y: y[i - 1]\n            })\n\n        }\n\n        this.setState({\n            showInputForm: false,\n            showTableInput: true\n        })\n    }\n    initialValue(n) {\n        x = new Array(n + 1)\n        y = []\n        for (var i = 1; i <= n; i++) {\n            x[i] = parseInt(document.getElementById(\"x\" + i).value);\n\n        }\n        for (i = 1; i <= n; i++) {\n            y[i] = parseFloat(document.getElementById(\"y\" + i).value);\n        }\n    }\n    linear(n) {\n        var matrixX = [2], matrixY = [2], exponent = 0\n        for (var i = 0; i < 2; i++) {\n            matrixX[i] = []\n            for (var j = 0; j < 2; j++) {\n                if (i === 0 && j === 0) {\n                    matrixX[i][j] = n\n                }\n                else if (i === 0 && j === 1) {\n                    matrixX[i][j] = this.summation(x, 1)\n                }\n                else {\n                    matrixX[i][j] = this.summation(x, exponent + j)\n                }\n            }\n            exponent++\n        }\n        matrixY[0] = sum(y)\n        matrixY[1] = this.summationOfTwo(x, y)\n        matrixX = inv(matrixX)\n        answer = JSON.stringify(multiply(matrixX, matrixY))\n\n        this.setState({\n            showOutputCard: true\n        })\n    }\n    summation(A, exponent) {\n        var sum = 0\n        for (var i = 1; i < A.length; i++) {\n            sum += Math.pow(A[i], exponent)\n        }\n        return sum\n    }\n    summationOfTwo(A, B) {\n        var sum = 0\n        for (var i = 1; i < A.length; i++) {\n            sum += A[i] * B[i]\n        }\n        return sum\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Linear Regression</h2>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n                            {this.state.showInputForm &&\n                                <div>\n                                    <h2>Number of points(n)</h2><Input size=\"large\" name=\"nPoints\" style={InputStyle}></Input>\n                                    <Button id=\"dimention_button\" onClick={\n                                        () => this.createTableInput(parseInt(this.state.nPoints), parseInt(this.state.m))}\n                                        style={{ background: \"#4caf50\", color: \"white\", fontSize: \"20px\" }}>\n                                        Submit<br></br>\n                                    </Button>\n                                </div>\n                            }\n                            {this.state.showTableInput &&\n                                <div>\n                                    <Table columns={columns} dataSource={tableTag} pagination={false} bordered={true} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"white\", overflowY: \"scroll\", minWidth: 120, maxHeight: 300 }}></Table>\n                                    <Button\n                                        id=\"matrix_button\"\n                                        style={{ background: \"blue\", color: \"white\", fontSize: \"20px\" }}\n                                        onClick={() => {\n                                            this.initialValue(parseInt(this.state.nPoints));\n                                            this.linear(parseInt(this.state.nPoints))\n                                        }}\n                                    >\n                                        Submit\n                                </Button>\n                                </div>\n                            }\n\n                        </Card>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{ border: \"2px solid black\", background: \"rgb(61, 104, 61) none repeat scroll 0% 0%\", color: \"white\" }}\n                            >\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>x = {JSON.stringify(answer)}</p>\n                            </Card>\n                        }\n                    </div>\n\n\n\n\n\n\n                </div>\n\n\n            </div>\n        );\n    }\n}\nexport default Linear;"]},"metadata":{},"sourceType":"module"}