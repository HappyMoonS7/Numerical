{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bovornpoljiturai/Desktop/Fluke_Numer_web/src/Calculate/Linear Algebra/Cramer.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button } from 'antd';\nimport { det } from 'mathjs';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nconst InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar A = [],\n    B = [],\n    answer = [],\n    matrixA = [],\n    matrixB = [];\n\nclass Cramer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      row: parseInt(0),\n      column: parseInt(0),\n      showDimentionForm: true,\n      showMatrixForm: false,\n      showOutputCard: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.cramer = this.cramer.bind(this);\n  }\n\n  cramer() {\n    this.initMatrix();\n    var counter = 0;\n\n    while (counter != this.state.row) {\n      var transformMatrix = JSON.parse(JSON.stringify(A)); //Deep copy\n\n      for (var i = 0; i < this.state.row; i++) {\n        for (var j = 0; j < this.state.column; j++) {\n          if (j === counter) {\n            transformMatrix[i][j] = B[i];\n            break;\n          }\n        }\n      }\n\n      counter++;\n      answer.push( /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n          children: counter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 30\n        }, this), \"=\\xA0\\xA0\", Math.round(det(transformMatrix)) / Math.round(det(A))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this));\n      answer.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this));\n    }\n\n    this.setState({\n      showOutputCard: true\n    });\n  }\n\n  createMatrix(row, column) {\n    for (var i = 1; i <= row; i++) {\n      for (var j = 1; j <= column; j++) {\n        matrixA.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"14%\",\n            height: \"50%\",\n            backgroundColor: \"#06d9a0\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"a\" + i + \"\" + j,\n          placeholder: \"a\" + i + \"\" + j\n        }, \"a\" + i + \"\" + j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 30\n        }, this));\n      }\n\n      matrixA.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 26\n      }, this));\n      matrixB.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"14%\",\n          height: \"50%\",\n          backgroundColor: \"black\",\n          marginInlineEnd: \"5%\",\n          marginBlockEnd: \"5%\",\n          color: \"white\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"b\" + i,\n        placeholder: \"b\" + i\n      }, \"b\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 26\n      }, this));\n    }\n\n    this.setState({\n      showDimentionForm: false,\n      showMatrixForm: true\n    });\n  }\n\n  initMatrix() {\n    for (var i = 0; i < this.state.row; i++) {\n      A[i] = [];\n\n      for (var j = 0; j < this.state.column; j++) {\n        A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n      }\n\n      B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    let _this$state = this.state,\n        row = _this$state.row,\n        column = _this$state.column;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        children: \"Cramer's Rule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            bordered: true,\n            style: {\n              background: \"gray\",\n              borderRadius: \"15px\",\n              color: \"#FFFFFFFF\"\n            },\n            onChange: this.handleChange,\n            children: [this.state.showDimentionForm && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Row\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"large\",\n                name: \"row\",\n                style: InputStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Column\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"large\",\n                name: \"column\",\n                style: InputStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 52\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 113\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                id: \"dimention_button\",\n                onClick: () => this.createMatrix(row, column),\n                style: {\n                  background: \"#4caf50\",\n                  color: \"white\"\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this), this.state.showMatrixForm && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Matrix [A]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 56\n              }, this), matrixA, /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Vector [B]\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 37\n              }, this), matrixB, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 71\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"large\",\n                id: \"matrix_button\",\n                style: {\n                  background: \"blue\",\n                  color: \"white\"\n                },\n                onClick: () => this.cramer(),\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: this.state.showOutputCard && /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Output\",\n            bordered: true,\n            style: {\n              width: \"100%\",\n              background: \"#3d683d\",\n              color: \"#FFFFFFFF\",\n              float: \"left\"\n            },\n            onChange: this.handleChange,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: \"24px\",\n                fontWeight: \"bold\"\n              },\n              children: answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Cramer;","map":{"version":3,"sources":["/Users/bovornpoljiturai/Desktop/Fluke_Numer_web/src/Calculate/Linear Algebra/Cramer.js"],"names":["React","Component","Card","Input","Button","det","InputStyle","background","color","fontWeight","fontSize","A","B","answer","matrixA","matrixB","Cramer","constructor","state","row","parseInt","column","showDimentionForm","showMatrixForm","showOutputCard","handleChange","bind","cramer","initMatrix","counter","transformMatrix","JSON","parse","stringify","i","j","push","Math","round","setState","createMatrix","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","parseFloat","document","getElementById","value","event","target","name","render","padding","borderRadius","float"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Input, Button } from 'antd';\nimport { det } from 'mathjs';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\n\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\n\n\nvar A = [], B = [], answer = [], matrixA = [], matrixB = []\nclass Cramer extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            row: parseInt(0),\n            column: parseInt(0),\n            showDimentionForm: true,\n            showMatrixForm: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.cramer = this.cramer.bind(this);\n\n    }\n\n    cramer() {\n        this.initMatrix();\n        var counter = 0;\n        \n\n        while (counter != this.state.row) {\n            var transformMatrix = JSON.parse(JSON.stringify(A)); //Deep copy\n            for (var i = 0; i < this.state.row; i++) {\n                for (var j = 0; j < this.state.column; j++) {\n                    if (j === counter) {\n                        transformMatrix[i][j] = B[i]\n                        break;\n                    }\n\n                }\n\n            }\n            counter++;\n            answer.push(<h2>X<sub>{counter}</sub>=&nbsp;&nbsp;{Math.round(det(transformMatrix)) / Math.round(det(A))}</h2>)\n            answer.push(<br />)\n\n        }\n        this.setState({\n            showOutputCard: true\n        });\n\n    }\n\n    createMatrix(row, column) {\n        for (var i = 1; i <= row; i++) {\n            for (var j = 1; j <= column; j++) {\n                matrixA.push(<Input style={{\n                    width: \"14%\",\n                    height: \"50%\",\n                    backgroundColor: \"#06d9a0\",\n                    marginInlineEnd: \"5%\",\n                    marginBlockEnd: \"5%\",\n                    color: \"white\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }}\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\n            }\n            matrixA.push(<br />)\n            matrixB.push(<Input style={{\n                width: \"14%\",\n                height: \"50%\",\n                backgroundColor: \"black\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\n        }\n\n        this.setState({\n            showDimentionForm: false,\n            showMatrixForm: true,\n        })\n\n\n    }\n\n    initMatrix() {\n        for (var i = 0; i < this.state.row; i++) {\n            A[i] = []\n            for (var j = 0; j < this.state.column; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    render() {\n        let { row, column } = this.state;\n        return (\n            <div style={{ padding: \"30px\" }}>\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Cramer's Rule</h2>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n\n                            {this.state.showDimentionForm &&\n                                <div>\n                                    <h4>Row</h4><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\n                                    <h4>Column</h4><Input size=\"large\" name=\"column\" style={InputStyle}></Input><br />\n                                    <Button id=\"dimention_button\" onClick={\n                                        () => this.createMatrix(row, column)\n                                    }\n                                        style={{ background: \"#4caf50\", color: \"white\" }}>\n                                        Submit\n                                    </Button>\n                                </div>\n                            }\n                            {this.state.showMatrixForm &&\n                                <div>\n                                    <h2>Matrix [A]</h2><br />{matrixA}\n                                    <h2>Vector [B]<br /></h2>{matrixB}<br/>\n                                    <Button\n                                        size=\"large\"\n                                        id=\"matrix_button\"\n                                        style={{ background: \"blue\", color: \"white\" }}\n                                        onClick={() => this.cramer()}>\n                                        Submit\n                                </Button>\n                                </div>\n                            }\n\n\n\n                        </Card>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{ width: \"100%\", background: \"#3d683d\", color: \"#FFFFFFFF\", float: \"left\" }}\n                                onChange={this.handleChange}>\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{answer}</p>\n                            </Card>\n                        }\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\nexport default Cramer;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}