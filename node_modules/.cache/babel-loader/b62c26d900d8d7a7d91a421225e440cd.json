{"ast":null,"code":"import _defineProperty from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/bovornpoljiturai/Numerical-method/src/Calculate/Interpolation/Spline.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar columns = [{\n  title: \"No.\",\n  dataIndex: \"no\",\n  key: \"no\"\n}, {\n  title: \"X\",\n  dataIndex: \"x\",\n  key: \"x\"\n}, {\n  title: \"Y\",\n  dataIndex: \"y\",\n  key: \"y\"\n}];\nvar x = [],\n    y = [],\n    tableTag = [],\n    answer;\n\nvar Spline = /*#__PURE__*/function (_Component) {\n  _inherits(Spline, _Component);\n\n  var _super = _createSuper(Spline);\n\n  function Spline() {\n    var _this;\n\n    _classCallCheck(this, Spline);\n\n    _this = _super.call(this);\n    _this.state = {\n      nPoints: 0,\n      X: 0,\n      showInputForm: true,\n      showTableInput: false,\n      showOutputCard: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Spline, [{\n    key: \"createTableInput\",\n    value: function createTableInput(n) {\n      for (var i = 1; i <= n; i++) {\n        x.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"100%\",\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"x\" + i,\n          placeholder: \"x\" + i\n        }, \"x\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 20\n        }, this));\n        y.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"100%\",\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"y\" + i,\n          placeholder: \"y\" + i\n        }, \"y\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 20\n        }, this));\n        tableTag.push({\n          no: i,\n          x: x[i - 1],\n          y: y[i - 1]\n        });\n      }\n\n      this.setState({\n        showInputForm: false,\n        showTableInput: true\n      });\n    }\n  }, {\n    key: \"initialValue\",\n    value: function initialValue(X) {\n      x = [];\n      y = [];\n\n      for (var i = 0; i < this.state.nPoints; i++) {\n        x[i] = parseFloat(document.getElementById(\"x\" + (i + 1)).value);\n        y[i] = parseFloat(document.getElementById(\"y\" + (i + 1)).value);\n      }\n\n      answer = this.spline(X, x, y);\n    }\n  }, {\n    key: \"spline\",\n    value: function spline(x, xs, ys) {\n      var ks = xs.map(function () {\n        return 0;\n      });\n      ks = this.getNaturalKs(xs, ys, ks);\n      var i = 1;\n\n      while (xs[i] < x) {\n        i++;\n      }\n\n      var t = (x - xs[i - 1]) / (xs[i] - xs[i - 1]);\n      var a = ks[i - 1] * (xs[i] - xs[i - 1]) - (ys[i] - ys[i - 1]);\n      var b = -ks[i] * (xs[i] - xs[i - 1]) + (ys[i] - ys[i - 1]);\n      var q = (1 - t) * ys[i - 1] + t * ys[i] + t * (1 - t) * (a * (1 - t) + b * t);\n      console.log(q);\n      this.setState({\n        showOutputCard: true\n      });\n      return q;\n    }\n  }, {\n    key: \"getNaturalKs\",\n    value: function getNaturalKs(xs, ys, ks) {\n      var n = xs.length - 1;\n      var A = this.zerosMat(n + 1, n + 2);\n\n      for (var i = 1; i < n; i++) // rows\n      {\n        A[i][i - 1] = 1 / (xs[i] - xs[i - 1]);\n        A[i][i] = 2 * (1 / (xs[i] - xs[i - 1]) + 1 / (xs[i + 1] - xs[i]));\n        A[i][i + 1] = 1 / (xs[i + 1] - xs[i]);\n        A[i][n + 1] = 3 * ((ys[i] - ys[i - 1]) / ((xs[i] - xs[i - 1]) * (xs[i] - xs[i - 1])) + (ys[i + 1] - ys[i]) / ((xs[i + 1] - xs[i]) * (xs[i + 1] - xs[i])));\n      }\n\n      A[0][0] = 2 / (xs[1] - xs[0]);\n      A[0][1] = 1 / (xs[1] - xs[0]);\n      A[0][n + 1] = 3 * (ys[1] - ys[0]) / ((xs[1] - xs[0]) * (xs[1] - xs[0]));\n      A[n][n - 1] = 1 / (xs[n] - xs[n - 1]);\n      A[n][n] = 2 / (xs[n] - xs[n - 1]);\n      A[n][n + 1] = 3 * (ys[n] - ys[n - 1]) / ((xs[n] - xs[n - 1]) * (xs[n] - xs[n - 1]));\n      return this.solve(A, ks);\n    }\n  }, {\n    key: \"solve\",\n    value: function solve(A, ks) {\n      var m = A.length;\n\n      for (var k = 0; k < m; k++) // column\n      {\n        // pivot for column\n        var i_max = 0;\n        var vali = Number.NEGATIVE_INFINITY;\n\n        for (var i = k; i < m; i++) {\n          if (A[i][k] > vali) {\n            i_max = i;\n            vali = A[i][k];\n          }\n        }\n\n        this.swapRows(A, k, i_max); // for all rows below pivot\n\n        for (i = k + 1; i < m; i++) {\n          for (var j = k + 1; j < m + 1; j++) {\n            A[i][j] = A[i][j] - A[k][j] * (A[i][k] / A[k][k]);\n          }\n\n          A[i][k] = 0;\n        }\n      }\n\n      for (i = m - 1; i >= 0; i--) // rows = columns\n      {\n        var v = A[i][m] / A[i][i];\n        ks[i] = v;\n\n        for (j = i - 1; j >= 0; j--) // rows\n        {\n          A[j][m] -= A[j][i] * v;\n          A[j][i] = 0;\n        }\n      }\n\n      console.log(A);\n      return ks;\n    }\n  }, {\n    key: \"zerosMat\",\n    value: function zerosMat(r, c) {\n      var A = [];\n\n      for (var i = 0; i < r; i++) {\n        A.push([]);\n\n        for (var j = 0; j < c; j++) {\n          A[i].push(0);\n        }\n      }\n\n      return A;\n    }\n  }, {\n    key: \"swapRows\",\n    value: function swapRows(m, k, l) {\n      var p = m[k];\n      m[k] = m[l];\n      m[l] = p;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"#FFFF\",\n          padding: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"black\",\n            fontWeight: \"bold\"\n          },\n          children: \"Spline Interpolation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                background: \"gray\",\n                borderRadius: \"15px\",\n                color: \"#FFFFFFFF\"\n              },\n              onChange: this.handleChange,\n              children: [this.state.showTableInput && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Table, {\n                  columns: columns,\n                  dataSource: tableTag,\n                  pagination: false,\n                  bordered: true,\n                  bodyStyle: {\n                    fontWeight: \"bold\",\n                    fontSize: \"18px\",\n                    color: \"white\",\n                    overflowY: \"scroll\",\n                    minWidth: 120,\n                    maxHeight: 300\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"matrix_button\",\n                  style: {\n                    background: \"blue\",\n                    color: \"white\",\n                    fontSize: \"20px\"\n                  },\n                  onClick: function onClick() {\n                    return _this2.initialValue(parseFloat(_this2.state.X));\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this), this.state.showInputForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Number of points(n)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"nPoints\",\n                  style: InputStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 65\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"X\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"X\",\n                  style: InputStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 47\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"dimention_button\",\n                  onClick: function onClick() {\n                    _this2.createTableInput(parseInt(_this2.state.nPoints));\n                  },\n                  style: {\n                    background: \"#4caf50\",\n                    color: \"white\"\n                  },\n                  children: [\"Submit\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 47\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: this.state.showOutputCard && /*#__PURE__*/_jsxDEV(Card, {\n              title: \"Output\",\n              bordered: true,\n              style: {\n                background: \"#2196f3\",\n                color: \"#FFFFFFFF\",\n                float: \"inline-start\"\n              },\n              id: \"outputCard\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontSize: \"24px\",\n                  fontWeight: \"bold\"\n                },\n                children: [\"X = \", answer]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Spline;\n}(Component);\n\nexport default Spline;","map":{"version":3,"sources":["/Users/bovornpoljiturai/Numerical-method/src/Calculate/Interpolation/Spline.js"],"names":["React","Component","Card","Input","Button","Table","InputStyle","background","color","fontWeight","fontSize","columns","title","dataIndex","key","x","y","tableTag","answer","Spline","state","nPoints","X","showInputForm","showTableInput","showOutputCard","handleChange","bind","n","i","push","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","no","setState","parseFloat","document","getElementById","value","spline","xs","ys","ks","map","getNaturalKs","t","a","b","q","console","log","length","A","zerosMat","solve","m","k","i_max","vali","Number","NEGATIVE_INFINITY","swapRows","j","v","r","c","l","p","event","target","name","padding","borderRadius","overflowY","minWidth","maxHeight","initialValue","createTableInput","parseInt","float"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\nvar columns = [\n    {\n        title: \"No.\",\n        dataIndex: \"no\",\n        key: \"no\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    }\n];\nvar x = [], y = [], tableTag = [], answer\n\nclass Spline extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            nPoints: 0,\n            X: 0,\n            showInputForm: true,\n            showTableInput: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n\n    }\n\n\n    createTableInput(n) {\n        for (var i = 1; i <= n; i++) {\n            x.push(<Input style={{\n                width: \"100%\",\n                height: \"50%\",\n                backgroundColor: \"black\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"x\" + i} key={\"x\" + i} placeholder={\"x\" + i} />);\n            y.push(<Input style={{\n                width: \"100%\",\n                height: \"50%\",\n                backgroundColor: \"black\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"y\" + i} key={\"y\" + i} placeholder={\"y\" + i} />);\n            tableTag.push({\n                no: i,\n                x: x[i - 1],\n                y: y[i - 1]\n            });\n        }\n\n\n        this.setState({\n            showInputForm: false,\n            showTableInput: true,\n        })\n    }\n    initialValue(X) {\n        x = []\n        y = []\n        for (var i = 0; i < this.state.nPoints; i++) {\n            x[i] = parseFloat(document.getElementById(\"x\" + (i + 1)).value);\n            y[i] = parseFloat(document.getElementById(\"y\" + (i + 1)).value);\n        }\n        answer = this.spline(X, x, y)\n    }\n    spline(x, xs, ys) {\n        var ks = xs.map(function () { return 0 })\n        ks = this.getNaturalKs(xs, ys, ks)\n        var i = 1;\n        while (xs[i] < x) i++;\n        var t = (x - xs[i - 1]) / (xs[i] - xs[i - 1]);\n        var a = ks[i - 1] * (xs[i] - xs[i - 1]) - (ys[i] - ys[i - 1]);\n        var b = -ks[i] * (xs[i] - xs[i - 1]) + (ys[i] - ys[i - 1]);\n        var q = (1 - t) * ys[i - 1] + t * ys[i] + t * (1 - t) * (a * (1 - t) + b * t);\n        console.log(q)\n        this.setState({\n            showOutputCard: true\n        })\n\n        return q;\n    }\n\n    getNaturalKs(xs, ys, ks) {\n        var n = xs.length - 1;\n        var A = this.zerosMat(n + 1, n + 2);\n\n        for (var i = 1; i < n; i++)  // rows\n        {\n            A[i][i - 1] = 1 / (xs[i] - xs[i - 1]);\n            A[i][i] = 2 * (1 / (xs[i] - xs[i - 1]) + 1 / (xs[i + 1] - xs[i]));\n            A[i][i + 1] = 1 / (xs[i + 1] - xs[i]);\n            A[i][n + 1] = 3 * ((ys[i] - ys[i - 1]) / ((xs[i] - xs[i - 1]) * (xs[i] - xs[i - 1])) + (ys[i + 1] - ys[i]) / ((xs[i + 1] - xs[i]) * (xs[i + 1] - xs[i])));\n        }\n\n        A[0][0] = 2 / (xs[1] - xs[0]);\n        A[0][1] = 1 / (xs[1] - xs[0]);\n        A[0][n + 1] = 3 * (ys[1] - ys[0]) / ((xs[1] - xs[0]) * (xs[1] - xs[0]));\n\n        A[n][n - 1] = 1 / (xs[n] - xs[n - 1]);\n        A[n][n] = 2 / (xs[n] - xs[n - 1]);\n        A[n][n + 1] = 3 * (ys[n] - ys[n - 1]) / ((xs[n] - xs[n - 1]) * (xs[n] - xs[n - 1]));\n\n        return this.solve(A, ks);\n    }\n\n    solve(A, ks) {\n        var m = A.length;\n        for (var k = 0; k < m; k++)  // column\n        {\n            // pivot for column\n            var i_max = 0; var vali = Number.NEGATIVE_INFINITY;\n            for (var i = k; i < m; i++) if (A[i][k] > vali) { i_max = i; vali = A[i][k]; }\n            this.swapRows(A, k, i_max);\n\n            // for all rows below pivot\n            for (i = k + 1; i < m; i++) {\n                for (var j = k + 1; j < m + 1; j++)\n                    A[i][j] = A[i][j] - A[k][j] * (A[i][k] / A[k][k]);\n                A[i][k] = 0;\n            }\n        }\n        for (i = m - 1; i >= 0; i--) // rows = columns\n        {\n            var v = A[i][m] / A[i][i];\n            ks[i] = v;\n            for (j = i - 1; j >= 0; j--) // rows\n            {\n                A[j][m] -= A[j][i] * v;\n                A[j][i] = 0;\n            }\n        }\n        console.log(A)\n        return ks;\n    }\n\n    zerosMat(r, c) {\n        var A = [];\n        for (var i = 0; i < r; i++) {\n            A.push([]);\n            for (var j = 0; j < c; j++) A[i].push(0);\n        }\n        return A;\n    }\n\n    swapRows(m, k, l) {\n        var p = m[k]; m[k] = m[l]; m[l] = p;\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Spline Interpolation</h2>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n                            {this.state.showTableInput &&\n                                <div>\n                                    <Table columns={columns} dataSource={tableTag} pagination={false} bordered={true} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"white\", overflowY: \"scroll\", minWidth: 120, maxHeight: 300 }}>\n\n                                    </Table>\n                                    <Button\n                                        id=\"matrix_button\"\n                                        style={{ background: \"blue\", color: \"white\", fontSize: \"20px\" }}\n                                        onClick={() => this.initialValue(parseFloat(this.state.X))}>\n                                        Submit\n                                </Button>\n                                </div>}\n\n                            {this.state.showInputForm &&\n                                <div>\n                                    <h2>Number of points(n)</h2><Input size=\"large\" name=\"nPoints\" style={InputStyle}></Input>\n                                    <h2>X</h2><Input size=\"large\" name=\"X\" style={InputStyle}></Input>\n                                    <Button id=\"dimention_button\" onClick={\n                                        () => { this.createTableInput(parseInt(this.state.nPoints)) }\n                                    }\n                                        style={{ background: \"#4caf50\", color: \"white\" }}>\n                                        Submit<br></br>\n                                    </Button>\n                                </div>\n                            }\n\n                        </Card>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{ background: \"#2196f3\", color: \"#FFFFFFFF\", float: \"inline-start\" }}\n                                id=\"outputCard\"\n                            >\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>X = {answer}</p>\n                            </Card>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Spline;\n\n\n\n"]},"metadata":{},"sourceType":"module"}