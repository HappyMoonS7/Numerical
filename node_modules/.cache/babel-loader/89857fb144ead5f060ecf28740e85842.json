{"ast":null,"code":"import _defineProperty from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/bovornpoljiturai/Numerical-method/src/Calculate/Root of Equation/Graphical.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport Graph from '../../components/Graph';\nimport { func } from '../../services/Services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar dataInTable;\nvar columns = [{\n  title: \"Iteration\",\n  dataIndex: \"iteration\",\n  key: \"iteration\"\n}, {\n  title: \"X\",\n  dataIndex: \"x\",\n  key: \"x\"\n}, {\n  title: \"Y\",\n  key: \"y\",\n  dataIndex: \"y\"\n}];\n\nvar Graphical = /*#__PURE__*/function (_Component) {\n  _inherits(Graphical, _Component);\n\n  var _super = _createSuper(Graphical);\n\n  function Graphical() {\n    var _this;\n\n    _classCallCheck(this, Graphical);\n\n    _this = _super.call(this);\n    _this.state = {\n      fx: \"\",\n      start: 0,\n      finish: 0,\n      showOutputCard: false,\n      showGraph: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.graphical = _this.graphical.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Graphical, [{\n    key: \"graphical\",\n    value: function graphical() {\n      var data = [];\n      data['x'] = [];\n      data['y'] = [];\n      console.log(typeof this.state.start);\n\n      for (var i = parseInt(this.state.start); i <= parseInt(this.state.finish); i++) {\n        data['x'].push(i);\n        data['y'].push(func(this.state.fx, i));\n      }\n\n      this.createTable(data['x'], data['y']);\n      this.setState({\n        showOutputCard: true,\n        showGraph: true\n      });\n    }\n  }, {\n    key: \"createTable\",\n    value: function createTable(x, y) {\n      dataInTable = [];\n\n      for (var i = 0; i <= parseInt(this.state.finish - this.state.start); i++) {\n        dataInTable.push({\n          iteration: i + 1,\n          x: x[i],\n          y: y[i]\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          fx = _this$state.fx,\n          start = _this$state.start,\n          finish = _this$state.finish;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"#FFFF\",\n          padding: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"black\",\n            fontWeight: \"bold\"\n          },\n          children: \"Graphical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                background: \"gray\",\n                color: \"#FFFFFFFF\",\n                borderRadius: \"10px\"\n              },\n              onChange: this.handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"f(x)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"large\",\n                name: \"fx\",\n                style: InputStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"large\",\n                name: \"start\",\n                style: InputStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Finish\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"large\",\n                name: \"finish\",\n                style: InputStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 105\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 111\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                id: \"submit_button\",\n                onClick: function onClick() {\n                  return _this2.graphical(parseFloat(start), parseFloat(finish));\n                },\n                style: {\n                  background: \"#4caf50\",\n                  color: \"white\"\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: this.state.showGraph && /*#__PURE__*/_jsxDEV(Graph, {\n              fx: fx,\n              title: \"Graphical Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: this.state.showOutputCard && /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Output\",\n            bordered: true,\n            style: {\n              width: \"100%\",\n              background: \"#2196f3\",\n              color: \"#FFFFFFFF\"\n            },\n            id: \"outputCard\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              columns: columns,\n              bordered: true,\n              dataSource: dataInTable,\n              bodyStyle: {\n                fontWeight: \"bold\",\n                fontSize: \"18px\",\n                color: \"black\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Graphical;\n}(Component);\n\nexport default Graphical;","map":{"version":3,"sources":["/Users/bovornpoljiturai/Numerical-method/src/Calculate/Root of Equation/Graphical.js"],"names":["React","Component","Card","Input","Button","Table","Graph","func","InputStyle","background","color","fontWeight","fontSize","dataInTable","columns","title","dataIndex","key","Graphical","state","fx","start","finish","showOutputCard","showGraph","handleChange","bind","graphical","data","console","log","i","parseInt","push","createTable","setState","x","y","iteration","event","target","name","value","padding","borderRadius","parseFloat","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport Graph from '../../components/Graph';\nimport { func } from '../../services/Services';\n\n\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\nvar dataInTable;\nconst columns = [\n    {\n        title: \"Iteration\",\n        dataIndex: \"iteration\",\n        key: \"iteration\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Y\",\n        key: \"y\",\n        dataIndex: \"y\"\n    }\n];\n\nclass Graphical extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            fx: \"\",\n            start: 0,\n            finish: 0,\n            showOutputCard: false,\n            showGraph: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.graphical = this.graphical.bind(this);\n    }\n\n    graphical() {\n        var data = []\n        data['x'] = []\n        data['y'] = []\n        console.log(typeof (this.state.start))\n        for (var i = parseInt(this.state.start); i <= parseInt(this.state.finish); i++) {\n            data['x'].push(i);\n            data['y'].push(func(this.state.fx, i));\n\n        }\n\n\n        this.createTable(data['x'], data['y']);\n        this.setState({\n            showOutputCard: true,\n            showGraph: true\n        })\n\n\n    }\n\n    createTable(x, y) {\n        dataInTable = []\n        for (var i = 0; i <= parseInt(this.state.finish - this.state.start); i++) {\n            dataInTable.push({\n                iteration: i + 1,\n                x: x[i],\n                y: y[i]\n            });\n        }\n\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        let { fx, start, finish } = this.state;\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Graphical</h2>\n\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            style={{ background: \"gray\", color: \"#FFFFFFFF\", borderRadius:\"10px\" }}\n                            onChange={this.handleChange}\n                        >\n                            <h4>f(x)</h4><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\n                            <h4>Start</h4><Input size=\"large\" name=\"start\" style={InputStyle}></Input>\n                            <h4>Finish</h4><Input size=\"large\" name=\"finish\" style={InputStyle}></Input><br /><br />\n                            <Button id=\"submit_button\" onClick={\n                                () => this.graphical(parseFloat(start), parseFloat(finish))\n                            }\n                                style={{ background: \"#4caf50\", color: \"white\"}}>Submit</Button>\n\n                        </Card>                        \n                    </div>\n                    <div className=\"col\">\n                        {this.state.showGraph && <Graph fx={fx}  title=\"Graphical Method\" />}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.state.showOutputCard &&\n                        <Card\n                            title={\"Output\"}\n                            bordered={true}\n                            style={{ width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\" }}\n                            id=\"outputCard\"\n                        >\n                            <Table columns={columns} bordered={true} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}></Table>\n                        </Card>\n                    }                    \n                </div>\n            </div>\n        );\n    }\n}\nexport default Graphical;"]},"metadata":{},"sourceType":"module"}