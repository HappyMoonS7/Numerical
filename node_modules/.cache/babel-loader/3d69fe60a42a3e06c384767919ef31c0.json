{"ast":null,"code":"import _defineProperty from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/bovornpoljiturai/Numerical-method/src/Calculate/Interpolation/Lagrange.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar columns = [{\n  title: \"No.\",\n  dataIndex: \"no\",\n  key: \"no\"\n}, {\n  title: \"X\",\n  dataIndex: \"x\",\n  key: \"x\"\n}, {\n  title: \"Y\",\n  dataIndex: \"y\",\n  key: \"y\"\n}];\nvar x, y, tableTag, interpolatePoint, tempTag, fx;\n\nvar Lagrange = /*#__PURE__*/function (_Component) {\n  _inherits(Lagrange, _Component);\n\n  var _super = _createSuper(Lagrange);\n\n  function Lagrange() {\n    var _this;\n\n    _classCallCheck(this, Lagrange);\n\n    _this = _super.call(this);\n    x = [];\n    y = [];\n    interpolatePoint = [];\n    tempTag = [];\n    tableTag = [];\n    _this.state = {\n      nPoints: 0,\n      X: 0,\n      interpolatePoint: 0,\n      showInputForm: true,\n      showTableInput: false,\n      showOutputCard: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.lagrange = _this.lagrange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Lagrange, [{\n    key: \"createTableInput\",\n    value: function createTableInput(n) {\n      for (var i = 1; i <= n; i++) {\n        x.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"100%\",\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"x\" + i,\n          placeholder: \"x\" + i\n        }, \"x\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }, this));\n        y.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"100%\",\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"y\" + i,\n          placeholder: \"y\" + i\n        }, \"y\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }, this));\n        tableTag.push({\n          no: i,\n          x: x[i - 1],\n          y: y[i - 1]\n        });\n      }\n\n      this.setState({\n        showInputForm: false,\n        showTableInput: true\n      });\n    }\n  }, {\n    key: \"createInterpolatePointInput\",\n    value: function createInterpolatePointInput() {\n      for (var i = 1; i <= this.state.interpolatePoint; i++) {\n        tempTag.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"14%\",\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"p\" + i,\n          placeholder: \"p\" + i\n        }, \"p\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 26\n        }, this));\n      }\n    }\n  }, {\n    key: \"initialValue\",\n    value: function initialValue() {\n      x = [];\n      y = [];\n\n      for (var i = 1; i <= this.state.nPoints; i++) {\n        x[i] = parseFloat(document.getElementById(\"x\" + i).value);\n        y[i] = parseFloat(document.getElementById(\"y\" + i).value);\n      }\n\n      for (i = 1; i <= this.state.interpolatePoint; i++) {\n        interpolatePoint[i] = parseFloat(document.getElementById(\"p\" + i).value);\n      }\n    }\n  }, {\n    key: \"L\",\n    value: function L(X, index, n) {\n      var numerate = 1\n      /*ตัวเศษ*/\n      ,\n          denominate = 1\n      /*ตัวส่วน*/\n      ;\n\n      for (var i = 1; i <= n; i++) {\n        if (i !== index) {\n          numerate *= x[i] - X;\n          denominate *= x[i] - x[index];\n        }\n      }\n\n      console.log(numerate / denominate);\n      return parseFloat(numerate / denominate);\n    }\n  }, {\n    key: \"lagrange\",\n    value: function lagrange(n, X) {\n      fx = 0;\n      this.initialValue();\n\n      for (var i = 1; i <= n; i++) {\n        fx += this.L(X, i, n) * y[i];\n      }\n\n      this.setState({\n        showOutputCard: true\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"black\",\n            fontWeight: \"bold\"\n          },\n          children: \"Lagrange Interpolation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                background: \"gray\",\n                borderRadius: \"15px\",\n                color: \"#FFFFFFFF\"\n              },\n              onChange: this.handleChange,\n              children: [this.state.showInputForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Number of points(n)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"nPoints\",\n                  style: InputStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 65\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"X\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"X\",\n                  style: InputStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 47\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"interpolatePoint\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"interpolatePoint\",\n                  style: InputStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 62\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"dimention_button\",\n                  onClick: function onClick() {\n                    _this2.createTableInput(parseInt(_this2.state.nPoints));\n\n                    _this2.createInterpolatePointInput();\n                  },\n                  style: {\n                    background: \"#4caf50\",\n                    color: \"white\"\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), this.state.showTableInput && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Table, {\n                  columns: columns,\n                  dataSource: tableTag,\n                  pagination: false,\n                  bordered: true,\n                  bodyStyle: {\n                    fontWeight: \"bold\",\n                    fontSize: \"18px\",\n                    color: \"white\",\n                    overflowY: \"scroll\",\n                    minWidth: 120,\n                    maxHeight: 300\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"interpolatePoint \", parseInt(this.state.interpolatePoint) === 2 ? \"(Linear)\" : parseInt(this.state.interpolatePoint) === 3 ? \"(Quadratic)\" : \"(Polynomial)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 42\n                }, this), tempTag, /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"matrix_button\",\n                  style: {\n                    background: \"blue\",\n                    color: \"white\",\n                    fontSize: \"20px\"\n                  },\n                  onClick: function onClick() {\n                    return _this2.lagrange(parseInt(_this2.state.interpolatePoint), parseFloat(_this2.state.X));\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: this.state.showOutputCard && /*#__PURE__*/_jsxDEV(Card, {\n              title: \"Output\",\n              bordered: true,\n              style: {\n                border: \"2px solid black\",\n                background: \"rgb(61, 104, 61) none repeat scroll 0% 0%\",\n                color: \"white\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontSize: \"24px\",\n                  fontWeight: \"bold\"\n                },\n                children: fx\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Lagrange;\n}(Component);\n\nexport default Lagrange;","map":{"version":3,"sources":["/Users/bovornpoljiturai/Numerical-method/src/Calculate/Interpolation/Lagrange.js"],"names":["React","Component","Card","Input","Button","Table","InputStyle","background","color","fontWeight","fontSize","columns","title","dataIndex","key","x","y","tableTag","interpolatePoint","tempTag","fx","Lagrange","state","nPoints","X","showInputForm","showTableInput","showOutputCard","handleChange","bind","lagrange","n","i","push","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","no","setState","parseFloat","document","getElementById","value","index","numerate","denominate","console","log","initialValue","L","event","target","name","padding","borderRadius","createTableInput","parseInt","createInterpolatePointInput","overflowY","minWidth","maxHeight","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Card, Input, Button, Table} from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\", \n    fontWeight: \"bold\", \n    fontSize: \"24px\"\n\n};\nvar columns = [\n    {\n      title: \"No.\",\n      dataIndex: \"no\",\n      key: \"no\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    }\n];\nvar x, y, tableTag,  interpolatePoint, tempTag, fx\n\nclass Lagrange extends Component {\n    \n    constructor() {\n        super();\n        x = []\n        y = []\n        interpolatePoint = []\n        tempTag = []\n        tableTag = []\n        this.state = {\n            nPoints: 0,\n            X: 0,\n            interpolatePoint: 0,\n            showInputForm : true,\n            showTableInput: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.lagrange = this.lagrange.bind(this);\n    \n    }  \n    createTableInput(n) {\n        for (var i=1 ; i<=n ; i++) {\n            x.push(<Input style={{\n                width: \"100%\",\n                height: \"50%\", \n                backgroundColor:\"black\", \n                marginInlineEnd: \"5%\", \n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n            id={\"x\"+i} key={\"x\"+i} placeholder={\"x\"+i}/>);\n            y.push(<Input style={{\n                width: \"100%\",\n                height: \"50%\", \n                backgroundColor:\"black\", \n                marginInlineEnd: \"5%\", \n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }} \n            id={\"y\"+i} key={\"y\"+i} placeholder={\"y\"+i}/>);   \n            tableTag.push({\n                no: i,\n                x: x[i-1],\n                y: y[i-1]\n            });\n        }\n\n\n        this.setState({\n            showInputForm: false,\n            showTableInput: true,\n        })\n    }\n    createInterpolatePointInput(){\n        for (var i=1 ; i<=this.state.interpolatePoint ; i++) {\n            tempTag.push(<Input style={{\n                width: \"14%\",\n                height: \"50%\", \n                backgroundColor:\"black\", \n                marginInlineEnd: \"5%\", \n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }} \n            id={\"p\"+i} key={\"p\"+i} placeholder={\"p\"+i} />)\n        }\n    }\n    initialValue() {\n        x = []\n        y = []\n        for (var i=1 ; i<=this.state.nPoints ; i++) {\n            x[i] = parseFloat(document.getElementById(\"x\"+i).value);\n            y[i] = parseFloat(document.getElementById(\"y\"+i).value);\n        }\n        for (i=1 ; i<=this.state.interpolatePoint ; i++) {\n            interpolatePoint[i] = parseFloat(document.getElementById(\"p\"+i).value);\n        }\n    }\n\n    L(X, index, n) {\n        var numerate = 1/*ตัวเศษ*/, denominate = 1/*ตัวส่วน*/;\n        for (var i=1 ; i<=n ; i++) {\n            if (i !== index) {\n                numerate *= x[i]-X;\n                denominate *= x[i] - x[index];\n            }\n        } \n        console.log(numerate/denominate)\n        return parseFloat(numerate/denominate);\n    }\n\n    lagrange(n, X) {\n        fx = 0\n        this.initialValue()\n        for (var i=1 ; i<=n ; i++) {\n            fx += this.L(X, i, n)*y[i];\n        }\n        this.setState({\n            showOutputCard: true\n        })\n\n    } \n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return(\n            <div style={{padding: \"30px\" }}>\n                <h2 style={{color: \"black\", fontWeight: \"bold\"}}>Lagrange Interpolation</h2>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                        bordered={true}\n                        style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                        onChange={this.handleChange}\n                        >\n                            {this.state.showInputForm && \n                                <div>\n                                    <h2>Number of points(n)</h2><Input size=\"large\" name=\"nPoints\" style={InputStyle}></Input>\n                                    <h2>X</h2><Input size=\"large\" name=\"X\" style={InputStyle}></Input>\n                                    <h2>interpolatePoint</h2><Input size=\"large\" name=\"interpolatePoint\" style={InputStyle}></Input>\n                                    <Button id=\"dimention_button\" onClick= {\n                                        ()=>{this.createTableInput(parseInt(this.state.nPoints));\n                                        this.createInterpolatePointInput()}\n                                    }  \n                                        style={{background: \"#4caf50\", color: \"white\" }}>\n                                        Submit\n                                    </Button>\n                                </div> \n                            }\n                            {this.state.showTableInput && \n                                <div>\n                                    <Table columns={columns} dataSource={tableTag} pagination={false} bordered={true} bodyStyle={{fontWeight: \"bold\", fontSize: \"18px\", color: \"white\" , overflowY: \"scroll\", minWidth: 120, maxHeight: 300}}></Table>\n                                    <br/><h2>interpolatePoint {parseInt(this.state.interpolatePoint) === 2 ? \"(Linear)\": \n                                                            parseInt(this.state.interpolatePoint) === 3 ? \"(Quadratic)\" :\n                                                            \"(Polynomial)\"}</h2>{tempTag}\n                                    <Button \n                                        id=\"matrix_button\"  \n                                        style={{background: \"blue\", color: \"white\", fontSize: \"20px\"}}\n                                        onClick={()=>this.lagrange(parseInt(this.state.interpolatePoint), parseFloat(this.state.X))}>\n                                        Submit\n                                    </Button>\n                                </div>\n                            }\n                     \n                        </Card>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                            title={\"Output\"}\n                            bordered={true}\n                            style={{ border: \"2px solid black\", background: \"rgb(61, 104, 61) none repeat scroll 0% 0%\", color: \"white\" }}\n                            >\n                                <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>{fx}</p>\n                            </Card>                        \n                        }                        \n                    </div>     \n                </div>\n\n                \n            </div>\n        );\n    }\n}\nexport default Lagrange;"]},"metadata":{},"sourceType":"module"}