{"ast":null,"code":"import _defineProperty from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/bovornpoljiturai/Numerical-method/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/bovornpoljiturai/Numerical-method/src/Calculate/Linear Algebra/LU.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { lusolve, format } from 'mathjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar A = [],\n    B = [],\n    matrixA = [],\n    matrixB = [],\n    output = [],\n    decompose;\n\nvar LU = /*#__PURE__*/function (_Component) {\n  _inherits(LU, _Component);\n\n  var _super = _createSuper(LU);\n\n  function LU() {\n    var _this;\n\n    _classCallCheck(this, LU);\n\n    _this = _super.call(this);\n    _this.state = {\n      row: 0,\n      column: 0,\n      showDimentionForm: true,\n      showMatrixForm: false,\n      showOutputCard: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.Lu = _this.Lu.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(LU, [{\n    key: \"Lu\",\n    value: function Lu() {\n      this.initMatrix();\n      decompose = lusolve(A, B);\n\n      for (var i = 0; i < decompose.length; i++) {\n        output.push(Math.round(decompose[i]));\n        output.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this));\n      }\n\n      this.setState({\n        showOutputCard: true\n      });\n    }\n  }, {\n    key: \"printFraction\",\n    value: function printFraction(value) {\n      return format(value, {\n        fraction: 'ratio'\n      });\n    }\n  }, {\n    key: \"createMatrix\",\n    value: function createMatrix(row, column) {\n      for (var i = 1; i <= row; i++) {\n        for (var j = 1; j <= column; j++) {\n          matrixA.push( /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              width: \"18%\",\n              height: \"50%\",\n              backgroundColor: \"#06d9a0\",\n              marginInlineEnd: \"5%\",\n              marginBlockEnd: \"5%\",\n              color: \"white\",\n              fontSize: \"18px\",\n              fontWeight: \"bold\"\n            },\n            id: \"a\" + i + \"\" + j,\n            placeholder: \"a\" + i + \"\" + j\n          }, \"a\" + i + \"\" + j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 30\n          }, this));\n        }\n\n        matrixA.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 26\n        }, this));\n        matrixB.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"18%\",\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"b\" + i,\n          placeholder: \"b\" + i\n        }, \"b\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 26\n        }, this));\n      }\n\n      this.setState({\n        showDimentionForm: false,\n        showMatrixForm: true\n      });\n    }\n  }, {\n    key: \"initMatrix\",\n    value: function initMatrix() {\n      for (var i = 0; i < this.state.row; i++) {\n        A[i] = [];\n\n        for (var j = 0; j < this.state.column; j++) {\n          A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n        }\n\n        B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"#FFFF\",\n          padding: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"black\",\n            fontWeight: \"bold\"\n          },\n          children: \"LU Decomposition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bordered: true,\n              style: {\n                background: \"gray\",\n                borderRadius: \"15px\",\n                color: \"#FFFFFFFF\"\n              },\n              onChange: this.handleChange,\n              children: [this.state.showDimentionForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Row\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"row\",\n                  style: InputStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Column\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"column\",\n                  style: InputStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 52\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"dimention_button\",\n                  onClick: function onClick() {\n                    return _this2.createMatrix(_this2.state.row, _this2.state.column);\n                  },\n                  style: {\n                    background: \"#4caf50\",\n                    color: \"white\"\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), this.state.showMatrixForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Matrix [A]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 56\n                }, this), matrixA, /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"Vector [B]\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 51\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 37\n                }, this), matrixB, /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"matrix_button\",\n                  style: {\n                    background: \"blue\",\n                    color: \"white\"\n                  },\n                  onClick: function onClick() {\n                    return _this2.Lu();\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: this.state.showOutputCard && /*#__PURE__*/_jsxDEV(Card, {\n              title: \"Output\",\n              bordered: true,\n              style: {\n                background: \"#3d683d\",\n                color: \"#FFFFFFFF\"\n              },\n              onChange: this.handleChange,\n              id: \"answerCard\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontSize: \"24px\",\n                  fontWeight: \"bold\"\n                },\n                children: output\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return LU;\n}(Component);\n\nexport default LU;","map":{"version":3,"sources":["/Users/bovornpoljiturai/Numerical-method/src/Calculate/Linear Algebra/LU.js"],"names":["React","Component","Card","Input","Button","lusolve","format","InputStyle","background","color","fontWeight","fontSize","A","B","matrixA","matrixB","output","decompose","LU","state","row","column","showDimentionForm","showMatrixForm","showOutputCard","handleChange","bind","Lu","initMatrix","i","length","push","Math","round","setState","value","fraction","j","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","parseFloat","document","getElementById","event","target","name","padding","borderRadius","createMatrix"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAO,kBAAP;AACA,OAAO,oBAAP;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,QAAhC;;AACA,IAAMC,UAAU,GAAG;AACfC,EAAAA,UAAU,EAAE,SADG;AAEfC,EAAAA,KAAK,EAAE,OAFQ;AAGfC,EAAAA,UAAU,EAAE,MAHG;AAIfC,EAAAA,QAAQ,EAAE;AAJK,CAAnB;AAQA,IAAIC,CAAC,GAAG,EAAR;AAAA,IAAYC,CAAC,GAAG,EAAhB;AAAA,IAAoBC,OAAO,GAAG,EAA9B;AAAA,IAAkCC,OAAO,GAAG,EAA5C;AAAA,IAAgDC,MAAM,GAAG,EAAzD;AAAA,IAA6DC,SAA7D;;IACMC,E;;;;;AAEF,gBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,CADI;AAETC,MAAAA,MAAM,EAAE,CAFC;AAGTC,MAAAA,iBAAiB,EAAE,IAHV;AAITC,MAAAA,cAAc,EAAE,KAJP;AAKTC,MAAAA,cAAc,EAAE;AALP,KAAb;AAOA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKC,EAAL,GAAU,MAAKA,EAAL,CAAQD,IAAR,+BAAV;AAVU;AAYb;;;;WAED,cAAK;AACD,WAAKE,UAAL;AACAX,MAAAA,SAAS,GAAGZ,OAAO,CAACO,CAAD,EAAIC,CAAJ,CAAnB;;AACA,WAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,SAAS,CAACa,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvCb,QAAAA,MAAM,CAACe,IAAP,CAAYC,IAAI,CAACC,KAAL,CAAWhB,SAAS,CAACY,CAAD,CAApB,CAAZ;AACAb,QAAAA,MAAM,CAACe,IAAP,eAAY;AAAA;AAAA;AAAA;AAAA,gBAAZ;AACH;;AACD,WAAKG,QAAL,CAAc;AACVV,QAAAA,cAAc,EAAE;AADN,OAAd;AAKH;;;WAED,uBAAcW,KAAd,EAAqB;AACjB,aAAO7B,MAAM,CAAC6B,KAAD,EAAQ;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAR,CAAb;AACH;;;WAED,sBAAahB,GAAb,EAAkBC,MAAlB,EAA0B;AACtB,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIT,GAArB,EAA0BS,CAAC,EAA3B,EAA+B;AAC3B,aAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIhB,MAArB,EAA6BgB,CAAC,EAA9B,EAAkC;AAC9BvB,UAAAA,OAAO,CAACiB,IAAR,eAAa,QAAC,KAAD;AAAO,YAAA,KAAK,EAAE;AACvBO,cAAAA,KAAK,EAAE,KADgB;AAEvBC,cAAAA,MAAM,EAAE,KAFe;AAGvBC,cAAAA,eAAe,EAAE,SAHM;AAIvBC,cAAAA,eAAe,EAAE,IAJM;AAKvBC,cAAAA,cAAc,EAAE,IALO;AAMvBjC,cAAAA,KAAK,EAAE,OANgB;AAOvBE,cAAAA,QAAQ,EAAE,MAPa;AAQvBD,cAAAA,UAAU,EAAE;AARW,aAAd;AAUT,YAAA,EAAE,EAAE,MAAMmB,CAAN,GAAU,EAAV,GAAeQ,CAVV;AAUoC,YAAA,WAAW,EAAE,MAAMR,CAAN,GAAU,EAAV,GAAeQ;AAVhE,aAUkB,MAAMR,CAAN,GAAU,EAAV,GAAeQ,CAVjC;AAAA;AAAA;AAAA;AAAA,kBAAb;AAWH;;AACDvB,QAAAA,OAAO,CAACiB,IAAR,eAAa;AAAA;AAAA;AAAA;AAAA,gBAAb;AACAhB,QAAAA,OAAO,CAACgB,IAAR,eAAa,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE;AACvBO,YAAAA,KAAK,EAAE,KADgB;AAEvBC,YAAAA,MAAM,EAAE,KAFe;AAGvBC,YAAAA,eAAe,EAAE,OAHM;AAIvBC,YAAAA,eAAe,EAAE,IAJM;AAKvBC,YAAAA,cAAc,EAAE,IALO;AAMvBjC,YAAAA,KAAK,EAAE,OANgB;AAOvBE,YAAAA,QAAQ,EAAE,MAPa;AAQvBD,YAAAA,UAAU,EAAE;AARW,WAAd;AAUT,UAAA,EAAE,EAAE,MAAMmB,CAVD;AAUkB,UAAA,WAAW,EAAE,MAAMA;AAVrC,WAUS,MAAMA,CAVf;AAAA;AAAA;AAAA;AAAA,gBAAb;AAaH;;AAED,WAAKK,QAAL,CAAc;AACVZ,QAAAA,iBAAiB,EAAE,KADT;AAEVC,QAAAA,cAAc,EAAE;AAFN,OAAd;AAMH;;;WACD,sBAAa;AACT,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKV,KAAL,CAAWC,GAA/B,EAAoCS,CAAC,EAArC,EAAyC;AACrCjB,QAAAA,CAAC,CAACiB,CAAD,CAAD,GAAO,EAAP;;AACA,aAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKlB,KAAL,CAAWE,MAA/B,EAAuCgB,CAAC,EAAxC,EAA4C;AACxCzB,UAAAA,CAAC,CAACiB,CAAD,CAAD,CAAKQ,CAAL,IAAWM,UAAU,CAACC,QAAQ,CAACC,cAAT,CAAwB,OAAOhB,CAAC,GAAG,CAAX,IAAgB,EAAhB,IAAsBQ,CAAC,GAAG,CAA1B,CAAxB,EAAsDF,KAAvD,CAArB;AACH;;AACDtB,QAAAA,CAAC,CAACkB,IAAF,CAAOY,UAAU,CAACC,QAAQ,CAACC,cAAT,CAAwB,OAAOhB,CAAC,GAAG,CAAX,CAAxB,EAAuCM,KAAxC,CAAjB;AACH;AACJ;;;WAED,sBAAaW,KAAb,EAAoB;AAChB,WAAKZ,QAAL,qBACKY,KAAK,CAACC,MAAN,CAAaC,IADlB,EACyBF,KAAK,CAACC,MAAN,CAAaZ,KADtC;AAGH;;;WACD,kBAAS;AAAA;;AACL,0BACI;AAAK,QAAA,KAAK,EAAE;AAAE3B,UAAAA,UAAU,EAAE,OAAd;AAAuByC,UAAAA,OAAO,EAAE;AAAhC,SAAZ;AAAA,gCACI;AAAI,UAAA,KAAK,EAAE;AAAExC,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,UAAU,EAAE;AAA9B,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI,QAAC,IAAD;AACI,cAAA,QAAQ,EAAE,IADd;AAEI,cAAA,KAAK,EAAE;AAAEF,gBAAAA,UAAU,EAAE,MAAd;AAAsB0C,gBAAAA,YAAY,EAAC,MAAnC;AAA2CzC,gBAAAA,KAAK,EAAE;AAAlD,eAFX;AAGI,cAAA,QAAQ,EAAE,KAAKgB,YAHnB;AAAA,yBAOK,KAAKN,KAAL,CAAWG,iBAAX,iBACG;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eACgB,QAAC,KAAD;AAAO,kBAAA,IAAI,EAAC,OAAZ;AAAoB,kBAAA,IAAI,EAAC,KAAzB;AAA+B,kBAAA,KAAK,EAAEf;AAAtC;AAAA;AAAA;AAAA;AAAA,wBADhB,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAEmB,QAAC,KAAD;AAAO,kBAAA,IAAI,EAAC,OAAZ;AAAoB,kBAAA,IAAI,EAAC,QAAzB;AAAkC,kBAAA,KAAK,EAAEA;AAAzC;AAAA;AAAA;AAAA;AAAA,wBAFnB,eAGI,QAAC,MAAD;AAAQ,kBAAA,EAAE,EAAC,kBAAX;AAA8B,kBAAA,OAAO,EACjC;AAAA,2BAAM,MAAI,CAAC4C,YAAL,CAAkB,MAAI,CAAChC,KAAL,CAAWC,GAA7B,EAAkC,MAAI,CAACD,KAAL,CAAWE,MAA7C,CAAN;AAAA,mBADJ;AAGI,kBAAA,KAAK,EAAE;AAAEb,oBAAAA,UAAU,EAAE,SAAd;AAAyBC,oBAAAA,KAAK,EAAE;AAAhC,mBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBARR,EAoBK,KAAKU,KAAL,CAAWI,cAAX,iBACG;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eACuB;AAAA;AAAA;AAAA;AAAA,wBADvB,EAC8BT,OAD9B,eAEI;AAAA,wDAAc;AAAA;AAAA;AAAA;AAAA,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAE8BC,OAF9B,eAIA,QAAC,MAAD;AACQ,kBAAA,EAAE,EAAC,eADX;AAEQ,kBAAA,KAAK,EAAE;AAAEP,oBAAAA,UAAU,EAAE,MAAd;AAAsBC,oBAAAA,KAAK,EAAE;AAA7B,mBAFf;AAGQ,kBAAA,OAAO,EAAE;AAAA,2BAAM,MAAI,CAACkB,EAAL,EAAN;AAAA,mBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,sBArBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAqCI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,sBACK,KAAKR,KAAL,CAAWK,cAAX,iBACG,QAAC,IAAD;AACI,cAAA,KAAK,EAAE,QADX;AAEI,cAAA,QAAQ,EAAE,IAFd;AAGI,cAAA,KAAK,EAAE;AAAEhB,gBAAAA,UAAU,EAAE,SAAd;AAAyBC,gBAAAA,KAAK,EAAE;AAAhC,eAHX;AAII,cAAA,QAAQ,EAAE,KAAKgB,YAJnB;AAIiC,cAAA,EAAE,EAAC,YAJpC;AAAA,qCAKI;AAAG,gBAAA,KAAK,EAAE;AAAEd,kBAAAA,QAAQ,EAAE,MAAZ;AAAoBD,kBAAAA,UAAU,EAAE;AAAhC,iBAAV;AAAA,0BAAqDM;AAArD;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,kBArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAsDH;;;;EA9IYf,S;;AAgJjB,eAAeiB,EAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Input, Button } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { lusolve, format } from 'mathjs';\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\n\nvar A = [], B = [], matrixA = [], matrixB = [], output = [], decompose;\nclass LU extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            row: 0,\n            column: 0,\n            showDimentionForm: true,\n            showMatrixForm: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.Lu = this.Lu.bind(this);\n\n    }\n\n    Lu() {\n        this.initMatrix();\n        decompose = lusolve(A, B)\n        for (var i = 0; i < decompose.length; i++) {\n            output.push(Math.round(decompose[i]));\n            output.push(<br />)\n        }\n        this.setState({\n            showOutputCard: true\n        });\n\n\n    }\n\n    printFraction(value) {\n        return format(value, { fraction: 'ratio' })\n    }\n\n    createMatrix(row, column) {\n        for (var i = 1; i <= row; i++) {\n            for (var j = 1; j <= column; j++) {\n                matrixA.push(<Input style={{\n                    width: \"18%\",\n                    height: \"50%\",\n                    backgroundColor: \"#06d9a0\",\n                    marginInlineEnd: \"5%\",\n                    marginBlockEnd: \"5%\",\n                    color: \"white\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }}\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\n            }\n            matrixA.push(<br />)\n            matrixB.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\",\n                backgroundColor: \"black\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\n\n\n        }\n\n        this.setState({\n            showDimentionForm: false,\n            showMatrixForm: true,\n        })\n\n\n    }\n    initMatrix() {\n        for (var i = 0; i < this.state.row; i++) {\n            A[i] = []\n            for (var j = 0; j < this.state.column; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>LU Decomposition</h2>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n\n\n                            {this.state.showDimentionForm &&\n                                <div>\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\n                                    <Button id=\"dimention_button\" onClick={\n                                        () => this.createMatrix(this.state.row, this.state.column)\n                                    }\n                                        style={{ background: \"#4caf50\", color: \"white\" }}>\n                                        Submit\n                                </Button>\n                                </div>\n                            }\n\n                            {this.state.showMatrixForm &&\n                                <div>\n                                    <h2>Matrix [A]</h2><br />{matrixA}\n                                    <h2>Vector [B]<br /></h2>{matrixB}\n                                    \n                                <Button\n                                        id=\"matrix_button\"\n                                        style={{ background: \"blue\", color: \"white\"}}\n                                        onClick={() => this.Lu()}>\n                                        Submit\n                                </Button>\n                                </div>\n                            }\n                        </Card>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{ background: \"#3d683d\", color: \"#FFFFFFFF\" }}\n                                onChange={this.handleChange} id=\"answerCard\">\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{output}</p>\n                            </Card>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default LU;\n\n\n\n"]},"metadata":{},"sourceType":"module"}